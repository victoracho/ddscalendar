import { openBlock as M, createElementBlock as j, createElementVNode as ce, unref as i, reactive as zt, computed as Q, ref as ee, toRef as Lt, watch as mt, h as Ln, render as qa, defineComponent as Ne, renderSlot as se, createCommentVNode as q, normalizeClass as Me, withKeys as fe, createBlock as we, withModifiers as $e, nextTick as et, onMounted as ze, onUnmounted as na, normalizeProps as Ye, mergeProps as Ve, Fragment as ke, normalizeStyle as qe, createTextVNode as it, toDisplayString as Le, onBeforeUpdate as Vn, renderList as Pe, withDirectives as xt, vShow as ea, withCtx as ye, createVNode as Xe, Transition as _t, createSlots as He, useSlots as Dt, guardReactiveProps as We, resolveDynamicComponent as la, getCurrentScope as Wn, onScopeDispose as Hn, isRef as Xa, Teleport as zn } from "vue";
import { format as lt, isEqual as Tt, setHours as dn, setMinutes as cn, setSeconds as Ya, setMilliseconds as Ia, isAfter as St, getYear as pe, getMonth as he, setMonth as Un, setYear as nt, addMonths as kt, subMonths as Vt, isValid as ta, isBefore as Wt, set as Ae, eachDayOfInterval as fn, getHours as xe, getMinutes as rt, getSeconds as Pt, startOfWeek as Na, endOfWeek as vn, parse as _a, isDate as Kn, addHours as jn, addYears as mn, subYears as pn, addDays as bt, getDay as Gn, differenceInCalendarDays as Qn, add as gn, sub as qn, getWeek as Xn, getISOWeek as Jn, isSameQuarter as Ja, eachQuarterOfInterval as Zn, startOfYear as xn, endOfYear as el, startOfQuarter as tl, endOfQuarter as Za, getQuarter as xa } from "date-fns";
function Ot() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      ce("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ce("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ce("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
Ot.compatConfig = {
  MODE: 3
};
function yn() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      ce("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
yn.compatConfig = {
  MODE: 3
};
function Ea() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
Ea.compatConfig = {
  MODE: 3
};
function Fa() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
Fa.compatConfig = {
  MODE: 3
};
function La() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      ce("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
La.compatConfig = {
  MODE: 3
};
function Va() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
Va.compatConfig = {
  MODE: 3
};
function Wa() {
  return M(), j(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
Wa.compatConfig = {
  MODE: 3
};
const ot = (e, t) => t ? new Date(e.toLocaleString("en-US", { timeZone: t })) : new Date(e), hn = (e, t) => {
  const r = Oa(e, t);
  return r || K();
}, al = (e, t) => t.dateInTz ? ot(new Date(e), t.dateInTz) : K(e), Oa = (e, t) => {
  if (!e)
    return null;
  if (!t)
    return K(e);
  const r = K(e);
  return t.exactMatch ? al(e, t) : ot(r, t.timezone);
}, nl = (e) => {
  if (!e)
    return 0;
  const t = /* @__PURE__ */ new Date(), r = new Date(t.toLocaleString("en-US", { timeZone: "UTC" })), n = new Date(t.toLocaleString("en-US", { timeZone: e })), a = n.getTimezoneOffset() / 60;
  return (+r - +n) / (1e3 * 60 * 60) - a;
};
function en(e) {
  return (t) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`)).slice(0, 2);
}
function ll(e) {
  return (t) => lt(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`), "EEEEEE", { locale: e });
}
const rl = (e, t, r) => {
  const n = [1, 2, 3, 4, 5, 6, 7];
  let a;
  if (e !== null)
    try {
      a = n.map(ll(e));
    } catch {
      a = n.map(en(t));
    }
  else
    a = n.map(en(t));
  const f = a.slice(0, r), v = a.slice(r + 1, a.length);
  return [a[r]].concat(...v).concat(...f);
}, Ha = (e, t, r) => {
  const n = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    n.push({ value: +a, text: Mn(a, t) });
  return r ? n.reverse() : n;
}, bn = (e, t, r) => {
  const n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((f) => {
    const v = f < 10 ? `0${f}` : f;
    return /* @__PURE__ */ new Date(`2017-${v}-01T00:00:00+00:00`);
  });
  if (e !== null)
    try {
      const f = r === "long" ? "MMMM" : "MMM";
      return n.map((v, o) => {
        const O = lt(ot(v, "UTC"), f, { locale: e });
        return {
          text: O.charAt(0).toUpperCase() + O.substring(1),
          value: o
        };
      });
    } catch {
    }
  const a = new Intl.DateTimeFormat(t, { month: r, timeZone: "UTC" });
  return n.map((f, v) => {
    const o = a.format(f);
    return {
      text: o.charAt(0).toUpperCase() + o.substring(1),
      value: v
    };
  });
}, ol = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Ie = (e) => {
  const t = i(e);
  return t != null && t.$el ? t == null ? void 0 : t.$el : t;
}, sl = (e) => ({ type: "dot", ...e ?? {} }), kn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, za = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Be = (e) => e, tn = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, an = (e) => e === null, wn = (e) => {
  if (e)
    return [...e.querySelectorAll("input, button, select, textarea, a[href]")][0];
}, ul = (e) => {
  const t = [], r = (n) => n.filter((a) => a);
  for (let n = 0; n < e.length; n += 3) {
    const a = [e[n], e[n + 1], e[n + 2]];
    t.push(r(a));
  }
  return t;
}, Ht = (e, t, r) => {
  const n = r != null, a = t != null;
  if (!n && !a)
    return !1;
  const f = +r, v = +t;
  return n && a ? +e > f || +e < v : n ? +e > f : a ? +e < v : !1;
}, Rt = (e, t) => ul(e).map((r) => r.map((n) => {
  const { active: a, disabled: f, isBetween: v, highlighted: o } = t(n);
  return {
    ...n,
    active: a,
    disabled: f,
    className: {
      dp__overlay_cell_active: a,
      dp__overlay_cell: !a,
      dp__overlay_cell_disabled: f,
      dp__overlay_cell_pad: !0,
      dp__overlay_cell_active_disabled: f && a,
      dp__cell_in_between: v,
      "dp--highlighted": o
    }
  };
})), ft = (e, t, r = !1) => {
  e && t.allowStopPropagation && (r && e.stopImmediatePropagation(), e.stopPropagation());
}, il = () => [
  "a[href]",
  "area[href]",
  "input:not([disabled]):not([type='hidden'])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "[tabindex]:not([tabindex='-1'])",
  "[data-datepicker-instance]"
].join(", ");
function dl(e, t) {
  let r = [...document.querySelectorAll(il())];
  r = r.filter((a) => !e.contains(a) || a.hasAttribute("data-datepicker-instance"));
  const n = r.indexOf(e);
  if (n >= 0 && (t ? n - 1 >= 0 : n + 1 <= r.length))
    return r[n + (t ? -1 : 1)];
}
const cl = (e, t) => e == null ? void 0 : e.querySelector(`[data-dp-element="${t}"]`), Mn = (e, t) => new Intl.NumberFormat(t, { useGrouping: !1, style: "decimal" }).format(e), Ua = (e) => lt(e, "dd-MM-yyyy"), ka = (e) => Array.isArray(e), aa = (e, t) => t.get(Ua(e)), fl = (e, t) => e ? t ? t instanceof Map ? !!aa(e, t) : t(K(e)) : !1 : !0, nn = (e, t, r, n, a, f) => {
  const v = _a(e, t.slice(0, e.length), /* @__PURE__ */ new Date(), { locale: f });
  return ta(v) && Kn(v) ? n || a ? v : Ae(v, {
    hours: +r.hours,
    minutes: +(r == null ? void 0 : r.minutes),
    seconds: +(r == null ? void 0 : r.seconds),
    milliseconds: 0
  }) : null;
}, vl = (e, t, r, n, a, f) => {
  const v = Array.isArray(r) ? r[0] : r;
  if (typeof t == "string")
    return nn(e, t, v, n, a, f);
  if (Array.isArray(t)) {
    let o = null;
    for (const O of t)
      if (o = nn(e, O, v, n, a, f), o)
        break;
    return o;
  }
  return typeof t == "function" ? t(e) : null;
}, K = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), ml = (e, t, r) => {
  if (t) {
    const a = (e.getMonth() + 1).toString().padStart(2, "0"), f = e.getDate().toString().padStart(2, "0"), v = e.getHours().toString().padStart(2, "0"), o = e.getMinutes().toString().padStart(2, "0"), O = r ? e.getSeconds().toString().padStart(2, "0") : "00";
    return `${e.getFullYear()}-${a}-${f}T${v}:${o}:${O}.000Z`;
  }
  const n = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(n).toISOString();
}, Qe = (e) => {
  let t = K(JSON.parse(JSON.stringify(e)));
  return t = dn(t, 0), t = cn(t, 0), t = Ya(t, 0), t = Ia(t, 0), t;
}, vt = (e, t, r, n) => {
  let a = e ? K(e) : K();
  return (t || t === 0) && (a = dn(a, +t)), (r || r === 0) && (a = cn(a, +r)), (n || n === 0) && (a = Ya(a, +n)), Ia(a, 0);
}, Ce = (e, t) => !e || !t ? !1 : Wt(Qe(e), Qe(t)), be = (e, t) => !e || !t ? !1 : Tt(Qe(e), Qe(t)), Oe = (e, t) => !e || !t ? !1 : St(Qe(e), Qe(t)), ra = (e, t, r) => e != null && e[0] && (e != null && e[1]) ? Oe(r, e[0]) && Ce(r, e[1]) : e != null && e[0] && t ? Oe(r, e[0]) && Ce(r, t) || Ce(r, e[0]) && Oe(r, t) : !1, Ze = (e) => {
  const t = Ae(new Date(e), { date: 1 });
  return Qe(t);
}, wa = (e, t, r) => t && (r || r === 0) ? Object.fromEntries(
  ["hours", "minutes", "seconds"].map((n) => n === t ? [n, r] : [n, isNaN(+e[n]) ? void 0 : +e[n]])
) : {
  hours: isNaN(+e.hours) ? void 0 : +e.hours,
  minutes: isNaN(+e.minutes) ? void 0 : +e.minutes,
  seconds: isNaN(+e.seconds) ? void 0 : +e.seconds
}, wt = (e) => ({
  hours: xe(e),
  minutes: rt(e),
  seconds: Pt(e)
}), Dn = (e, t) => {
  if (t) {
    const r = pe(K(t));
    if (r > e)
      return 12;
    if (r === e)
      return he(K(t));
  }
}, $n = (e, t) => {
  if (t) {
    const r = pe(K(t));
    return r < e ? -1 : r === e ? he(K(t)) : void 0;
  }
}, Ct = (e) => {
  if (e)
    return pe(K(e));
}, An = (e, t) => {
  const r = Oe(e, t) ? t : e, n = Oe(t, e) ? t : e;
  return fn({ start: r, end: n });
}, pl = (e) => {
  const t = kt(e, 1);
  return { month: he(t), year: pe(t) };
}, st = (e, t) => {
  const r = Na(e, { weekStartsOn: +t }), n = vn(e, { weekStartsOn: +t });
  return [r, n];
}, Tn = (e, t) => {
  const r = {
    hours: xe(K()),
    minutes: rt(K()),
    seconds: t ? Pt(K()) : 0
  };
  return Object.assign(r, e);
}, ct = (e, t, r) => [Ae(K(e), { date: 1 }), Ae(K(), { month: t, year: r, date: 1 })], ut = (e, t, r) => {
  let n = e ? K(e) : K();
  return (t || t === 0) && (n = Un(n, t)), r && (n = nt(n, r)), n;
}, Sn = (e, t, r, n, a) => {
  if (!n || a && !t || !a && !r)
    return !1;
  const f = a ? kt(e, 1) : Vt(e, 1), v = [he(f), pe(f)];
  return a ? !yl(...v, t) : !gl(...v, r);
}, gl = (e, t, r) => Ce(...ct(r, e, t)) || be(...ct(r, e, t)), yl = (e, t, r) => Oe(...ct(r, e, t)) || be(...ct(r, e, t)), Pn = (e, t, r, n, a, f, v) => {
  if (typeof t == "function" && !v)
    return t(e);
  const o = r ? { locale: r } : void 0;
  return Array.isArray(e) ? `${lt(e[0], f, o)}${a && !e[1] ? "" : n}${e[1] ? lt(e[1], f, o) : ""}` : lt(e, f, o);
}, $t = (e) => {
  if (e)
    return null;
  throw new Error(za.prop("partial-range"));
}, Jt = (e, t) => {
  if (t)
    return e();
  throw new Error(za.prop("range"));
}, Ba = (e) => Array.isArray(e) ? ta(e[0]) && (e[1] ? ta(e[1]) : !0) : e ? ta(e) : !1, hl = (e, t) => Ae(t ?? K(), {
  hours: +e.hours || 0,
  minutes: +e.minutes || 0,
  seconds: +e.seconds || 0
}), Ma = (e, t, r, n) => {
  if (!e)
    return !0;
  if (n) {
    const a = r === "max" ? Wt(e, t) : St(e, t), f = { seconds: 0, milliseconds: 0 };
    return a || Tt(Ae(e, f), Ae(t, f));
  }
  return r === "max" ? e.getTime() <= t.getTime() : e.getTime() >= t.getTime();
}, Da = (e, t, r) => e ? hl(e, t) : K(r ?? t), ln = (e, t, r, n, a) => {
  if (Array.isArray(n)) {
    const v = Da(e, n[0], t), o = Da(e, n[1], t);
    return Ma(n[0], v, r, !!t) && Ma(n[1], o, r, !!t) && a;
  }
  const f = Da(e, n, t);
  return Ma(n, f, r, !!t) && a;
}, $a = (e) => Ae(K(), wt(e)), bl = (e, t) => e instanceof Map ? Array.from(e.values()).filter((r) => pe(K(r)) === t).map((r) => he(r)) : [], Rn = (e, t, r) => typeof e == "function" ? e({ month: t, year: r }) : !!e.months.find((n) => n.month === t && n.year === r), Ka = (e, t) => typeof e == "function" ? e(t) : e.years.includes(t), Et = zt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Cn = () => {
  const e = (n) => {
    Et.menuFocused = n;
  }, t = (n) => {
    Et.shiftKeyInMenu !== n && (Et.shiftKeyInMenu = n);
  };
  return {
    control: Q(() => ({ shiftKeyInMenu: Et.shiftKeyInMenu, menuFocused: Et.menuFocused })),
    setMenuFocused: e,
    setShiftKey: t
  };
}, Se = zt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), Aa = ee(null), Zt = ee(!1), Ta = ee(!1), Sa = ee(!1), Pa = ee(!1), Fe = ee(0), _e = ee(0), pt = () => {
  const e = Q(() => Zt.value ? [...Se.selectionGrid, Se.actionRow].filter((C) => C.length) : Ta.value ? [
    ...Se.timePicker[0],
    ...Se.timePicker[1],
    Pa.value ? [] : [Aa.value],
    Se.actionRow
  ].filter((C) => C.length) : Sa.value ? [...Se.monthPicker, Se.actionRow] : [Se.monthYear, ...Se.calendar, Se.time, Se.actionRow].filter((C) => C.length)), t = (C) => {
    Fe.value = C ? Fe.value + 1 : Fe.value - 1;
    let L = null;
    e.value[_e.value] && (L = e.value[_e.value][Fe.value]), !L && e.value[_e.value + (C ? 1 : -1)] ? (_e.value = _e.value + (C ? 1 : -1), Fe.value = C ? 0 : e.value[_e.value].length - 1) : L || (Fe.value = C ? Fe.value - 1 : Fe.value + 1);
  }, r = (C) => {
    if (_e.value === 0 && !C || _e.value === e.value.length && C)
      return;
    _e.value = C ? _e.value + 1 : _e.value - 1, e.value[_e.value] ? e.value[_e.value] && !e.value[_e.value][Fe.value] && Fe.value !== 0 && (Fe.value = e.value[_e.value].length - 1) : _e.value = C ? _e.value - 1 : _e.value + 1;
  }, n = (C) => {
    let L = null;
    e.value[_e.value] && (L = e.value[_e.value][Fe.value]), L ? L.focus({ preventScroll: !Zt.value }) : Fe.value = C ? Fe.value - 1 : Fe.value + 1;
  }, a = () => {
    t(!0), n(!0);
  }, f = () => {
    t(!1), n(!1);
  }, v = () => {
    r(!1), n(!0);
  }, o = () => {
    r(!0), n(!0);
  }, O = (C, L) => {
    Se[L] = C;
  }, B = (C, L) => {
    Se[L] = C;
  }, y = () => {
    Fe.value = 0, _e.value = 0;
  };
  return {
    buildMatrix: O,
    buildMultiLevelMatrix: B,
    setTimePickerBackRef: (C) => {
      Aa.value = C;
    },
    setSelectionGrid: (C) => {
      Zt.value = C, y(), C || (Se.selectionGrid = []);
    },
    setTimePicker: (C, L = !1) => {
      Ta.value = C, Pa.value = L, y(), C || (Se.timePicker[0] = [], Se.timePicker[1] = []);
    },
    setTimePickerElements: (C, L = 0) => {
      Se.timePicker[L] = C;
    },
    arrowRight: a,
    arrowLeft: f,
    arrowUp: v,
    arrowDown: o,
    clearArrowNav: () => {
      Se.monthYear = [], Se.calendar = [], Se.time = [], Se.actionRow = [], Se.selectionGrid = [], Se.timePicker[0] = [], Se.timePicker[1] = [], Zt.value = !1, Ta.value = !1, Pa.value = !1, Sa.value = !1, y(), Aa.value = null;
    },
    setMonthPicker: (C) => {
      Sa.value = C, y();
    },
    refSets: Se
    // exposed for testing
  };
}, rn = (e) => ({
  menuAppearTop: "dp-menu-appear-top",
  menuAppearBottom: "dp-menu-appear-bottom",
  open: "dp-slide-down",
  close: "dp-slide-up",
  next: "calendar-next",
  previous: "calendar-prev",
  vNext: "dp-slide-up",
  vPrevious: "dp-slide-down",
  ...e ?? {}
}), kl = (e) => ({
  toggleOverlay: "Toggle overlay",
  menu: "Datepicker menu",
  input: "Datepicker input",
  calendarWrap: "Calendar wrapper",
  calendarDays: "Calendar days",
  openTimePicker: "Open time picker",
  closeTimePicker: "Close time Picker",
  incrementValue: (t) => `Increment ${t}`,
  decrementValue: (t) => `Decrement ${t}`,
  openTpOverlay: (t) => `Open ${t} overlay`,
  amPmButton: "Switch AM/PM mode",
  openYearsOverlay: "Open years overlay",
  openMonthsOverlay: "Open months overlay",
  nextMonth: "Next month",
  prevMonth: "Previous month",
  nextYear: "Next year",
  prevYear: "Previous year",
  day: void 0,
  weekDay: void 0,
  ...e ?? {}
}), on = (e) => e ? typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2 : 0, wl = (e) => {
  const t = typeof e == "object" && e, r = {
    static: !0,
    solo: !1
  };
  if (!e)
    return { ...r, count: on(!1) };
  const n = t ? e : {}, a = t ? n.count ?? !0 : e, f = on(a);
  return Object.assign(r, n, { count: f });
}, Ml = (e, t, r) => e || (typeof r == "string" ? r : t), Dl = (e) => typeof e == "boolean" ? e ? rn({}) : !1 : rn(e), $l = (e) => {
  const t = {
    enterSubmit: !0,
    tabSubmit: !0,
    openMenu: !0,
    selectOnFocus: !1,
    rangeSeparator: " - "
  };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : { ...t, enabled: e };
}, Al = (e) => ({
  months: [],
  years: [],
  times: { hours: [], minutes: [], seconds: [] },
  ...e ?? {}
}), Tl = (e) => ({
  showSelect: !0,
  showCancel: !0,
  showNow: !1,
  showPreview: !0,
  ...e ?? {}
}), Sl = (e) => {
  const t = { input: !1 };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : {
    enabled: e,
    ...t
  };
}, Pl = (e) => ({ ...{
  allowStopPropagation: !0,
  closeOnScroll: !1,
  modeHeight: 255,
  allowPreventDefault: !1,
  closeOnClearValue: !0,
  closeOnAutoApply: !0,
  noSwipe: !1,
  keepActionRow: !1,
  onClickOutside: void 0,
  tabOutClosesMenu: !0,
  arrowLeft: void 0,
  keepViewOnOffsetClick: !1
}, ...e ?? {} }), Rl = (e) => {
  const t = {
    dates: Array.isArray(e) ? e.map((r) => K(r)) : [],
    years: [],
    months: [],
    quarters: [],
    weeks: [],
    weekdays: [],
    options: { highlightDisabled: !1 }
  };
  return typeof e == "function" ? e : { ...t, ...e ?? {} };
}, Cl = (e) => typeof e == "object" ? {
  type: (e == null ? void 0 : e.type) ?? "local",
  hideOnOffsetDates: (e == null ? void 0 : e.hideOnOffsetDates) ?? !1
} : {
  type: e,
  hideOnOffsetDates: !1
}, _l = (e, t) => {
  const r = {
    noDisabledRange: !1,
    showLastInRange: !0,
    minMaxRawRange: !1,
    partialRange: !0,
    disableTimeRangeValidation: !1,
    maxRange: void 0,
    minRange: void 0,
    autoRange: void 0,
    fixedStart: !1,
    fixedEnd: !1
  };
  return typeof e == "object" ? { enabled: !0, ...r, ...e } : {
    enabled: e,
    noDisabledRange: t.noDisabledRange,
    showLastInRange: t.showLastInRange,
    minMaxRawRange: t.minMaxRawRange,
    partialRange: t.partialRange,
    disableTimeRangeValidation: t.disableTimeRangeValidation,
    maxRange: t.maxRange,
    minRange: t.minRange,
    autoRange: t.autoRange,
    fixedStart: t.fixedStart,
    fixedEnd: t.fixedEnd
  };
}, Ol = (e, t) => e ? typeof e == "string" ? { timezone: e, exactMatch: !1, dateInTz: void 0, emitTimezone: t, convertModel: !0 } : {
  timezone: e.timezone,
  exactMatch: e.exactMatch ?? !1,
  dateInTz: e.dateInTz ?? void 0,
  emitTimezone: t ?? e.emitTimezone,
  convertModel: e.convertModel ?? !0
} : { timezone: void 0, exactMatch: !1, emitTimezone: t }, Ra = (e, t) => new Map(
  e.map((r) => {
    const n = hn(r, t);
    return [Ua(n), n];
  })
), Bl = (e, t) => e.length ? new Map(
  e.map((r) => {
    const n = hn(r.date, t);
    return [Ua(n), r];
  })
) : null, Yl = (e, t, r, n, a, f, v) => ({
  minDate: Oa(e, v),
  maxDate: Oa(t, v),
  disabledDates: ka(r) ? Ra(r, v) : r,
  allowedDates: ka(n) ? Ra(n, v) : null,
  highlight: typeof a == "object" && ka(a == null ? void 0 : a.dates) ? Ra(a.dates, v) : a,
  markers: Bl(f, v)
}), Il = (e, t) => typeof e == "boolean" ? { enabled: e, dragSelect: !0, limit: +t } : {
  enabled: !!e,
  limit: e.limit ? +e.limit : null,
  dragSelect: e.dragSelect ?? !0
}, Re = (e) => {
  const t = () => {
    const z = e.enableSeconds ? ":ss" : "", F = e.enableMinutes ? ":mm" : "";
    return e.is24 ? `HH${F}${z}` : `hh${F}${z} aa`;
  }, r = () => {
    var z;
    return e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? t() : e.weekPicker ? `${((z = W.value) == null ? void 0 : z.type) === "iso" ? "RR" : "ww"}-yyyy` : e.yearPicker ? "yyyy" : e.quarterPicker ? "QQQ/yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${t()}` : "MM/dd/yyyy";
  }, n = (z) => Tn(z, e.enableSeconds), a = () => Y.value.enabled ? e.startTime && Array.isArray(e.startTime) ? [n(e.startTime[0]), n(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? n(e.startTime) : null, f = Q(() => wl(e.multiCalendars)), v = Q(() => a()), o = Q(() => kl(e.ariaLabels)), O = Q(() => Al(e.filters)), B = Q(() => Dl(e.transitions)), y = Q(() => Tl(e.actionRow)), T = Q(
    () => Ml(e.previewFormat, e.format, r())
  ), b = Q(() => $l(e.textInput)), P = Q(() => Sl(e.inline)), V = Q(() => Pl(e.config)), D = Q(() => Rl(e.highlight)), W = Q(() => Cl(e.weekNumbers)), C = Q(() => Ol(e.timezone, e.emitTimezone)), L = Q(() => Il(e.multiDates, e.multiDatesLimit)), N = Q(
    () => Yl(
      e.minDate,
      e.maxDate,
      e.disabledDates,
      e.allowedDates,
      D.value,
      e.markers,
      C.value
    )
  ), Y = Q(
    () => _l(e.range, {
      minMaxRawRange: !1,
      maxRange: e.maxRange,
      minRange: e.minRange,
      noDisabledRange: e.noDisabledRange,
      showLastInRange: e.showLastInRange,
      partialRange: e.partialRange,
      disableTimeRangeValidation: e.disableTimeRangeValidation,
      autoRange: e.autoRange,
      fixedStart: e.fixedStart,
      fixedEnd: e.fixedEnd
    })
  );
  return {
    defaultedTransitions: B,
    defaultedMultiCalendars: f,
    defaultedStartTime: v,
    defaultedAriaLabels: o,
    defaultedFilters: O,
    defaultedActionRow: y,
    defaultedPreviewFormat: T,
    defaultedTextInput: b,
    defaultedInline: P,
    defaultedConfig: V,
    defaultedHighlight: D,
    defaultedWeekNumbers: W,
    defaultedRange: Y,
    propDates: N,
    defaultedTz: C,
    defaultedMultiDates: L,
    getDefaultPattern: r,
    getDefaultStartTime: a
  };
};
var Je = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e))(Je || {}), ht = /* @__PURE__ */ ((e) => (e.top = "top", e.bottom = "bottom", e))(ht || {}), Mt = /* @__PURE__ */ ((e) => (e.header = "header", e.calendar = "calendar", e.timePicker = "timePicker", e))(Mt || {}), at = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e.calendar = "calendar", e.time = "time", e.minutes = "minutes", e.hours = "hours", e.seconds = "seconds", e))(at || {});
const Nl = ["timestamp", "date", "iso"], El = (e, t, r) => {
  const n = ee(), { defaultedTextInput: a, defaultedRange: f, defaultedTz: v, defaultedMultiDates: o, getDefaultPattern: O } = Re(t), B = ee(""), y = Lt(t, "format"), T = Lt(t, "formatLocale");
  mt(
    n,
    () => {
      typeof t.onInternalModelChange == "function" && e("internal-model-change", n.value, R(!0));
    },
    { deep: !0 }
  ), mt(y, () => {
    p();
  });
  const b = (d) => v.value.timezone && v.value.convertModel ? ot(d, v.value.timezone) : d, P = (d) => {
    if (v.value.timezone && v.value.convertModel) {
      const le = nl(v.value.timezone);
      return jn(d, le);
    }
    return d;
  }, V = (d, le, l = !1) => Pn(
    d,
    t.format,
    t.formatLocale,
    a.value.rangeSeparator,
    t.modelAuto,
    le ?? O(),
    l
  ), D = (d) => d ? t.modelType ? I(d) : {
    hours: xe(d),
    minutes: rt(d),
    seconds: t.enableSeconds ? Pt(d) : 0
  } : null, W = (d) => t.modelType ? I(d) : { month: he(d), year: pe(d) }, C = (d) => Array.isArray(d) ? o.value.enabled ? d.map((le) => L(le, nt(K(), le))) : Jt(
    () => [
      nt(K(), d[0]),
      d[1] ? nt(K(), d[1]) : $t(f.value.partialRange)
    ],
    f.value.enabled
  ) : nt(K(), +d), L = (d, le) => (typeof d == "string" || typeof d == "number") && t.modelType ? X(d) : le, N = (d) => Array.isArray(d) ? [
    L(
      d[0],
      vt(null, +d[0].hours, +d[0].minutes, d[0].seconds)
    ),
    L(
      d[1],
      vt(null, +d[1].hours, +d[1].minutes, d[1].seconds)
    )
  ] : L(d, vt(null, d.hours, d.minutes, d.seconds)), Y = (d) => {
    const le = Ae(K(), { date: 1 });
    return Array.isArray(d) ? o.value.enabled ? d.map((l) => L(l, ut(le, +l.month, +l.year))) : Jt(
      () => [
        L(d[0], ut(le, +d[0].month, +d[0].year)),
        L(
          d[1],
          d[1] ? ut(le, +d[1].month, +d[1].year) : $t(f.value.partialRange)
        )
      ],
      f.value.enabled
    ) : L(d, ut(le, +d.month, +d.year));
  }, z = (d) => {
    if (Array.isArray(d))
      return d.map((le) => X(le));
    throw new Error(za.dateArr("multi-dates"));
  }, F = (d) => {
    if (Array.isArray(d) && f.value.enabled) {
      const le = d[0], l = d[1];
      return [
        K(Array.isArray(le) ? le[0] : null),
        K(Array.isArray(l) ? l[0] : null)
      ];
    }
    return K(d[0]);
  }, Z = (d) => t.modelAuto ? Array.isArray(d) ? [X(d[0]), X(d[1])] : t.autoApply ? [X(d)] : [X(d), null] : Array.isArray(d) ? Jt(
    () => d[1] ? [
      X(d[0]),
      d[1] ? X(d[1]) : $t(f.value.partialRange)
    ] : [X(d[0])],
    f.value.enabled
  ) : X(d), h = () => {
    Array.isArray(n.value) && f.value.enabled && n.value.length === 1 && n.value.push($t(f.value.partialRange));
  }, ie = () => {
    const d = n.value;
    return [
      I(d[0]),
      d[1] ? I(d[1]) : $t(f.value.partialRange)
    ];
  }, oe = () => n.value[1] ? ie() : I(Be(n.value[0])), re = () => (n.value || []).map((d) => I(d)), _ = (d = !1) => (d || h(), t.modelAuto ? oe() : o.value.enabled ? re() : Array.isArray(n.value) ? Jt(() => ie(), f.value.enabled) : I(Be(n.value))), H = (d) => !d || Array.isArray(d) && !d.length ? null : t.timePicker ? N(Be(d)) : t.monthPicker ? Y(Be(d)) : t.yearPicker ? C(Be(d)) : o.value.enabled ? z(Be(d)) : t.weekPicker ? F(Be(d)) : Z(Be(d)), te = (d) => {
    const le = H(d);
    Ba(Be(le)) ? (n.value = Be(le), p()) : (n.value = null, B.value = "");
  }, E = () => {
    const d = (le) => lt(le, a.value.format);
    return `${d(n.value[0])} ${a.value.rangeSeparator} ${n.value[1] ? d(n.value[1]) : ""}`;
  }, c = () => r.value && n.value ? Array.isArray(n.value) ? E() : lt(n.value, a.value.format) : V(n.value), A = () => n.value ? o.value.enabled ? n.value.map((d) => V(d)).join("; ") : a.value.enabled && typeof a.value.format == "string" ? c() : V(n.value) : "", p = () => {
    !t.format || typeof t.format == "string" || a.value.enabled && typeof a.value.format == "string" ? B.value = A() : B.value = t.format(n.value);
  }, X = (d) => {
    if (t.utc) {
      const le = new Date(d);
      return t.utc === "preserve" ? new Date(le.getTime() + le.getTimezoneOffset() * 6e4) : le;
    }
    return t.modelType ? Nl.includes(t.modelType) ? b(new Date(d)) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? b(
      _a(d, O(), /* @__PURE__ */ new Date(), { locale: T.value })
    ) : b(
      _a(d, t.modelType, /* @__PURE__ */ new Date(), { locale: T.value })
    ) : b(new Date(d));
  }, I = (d) => d ? t.utc ? ml(d, t.utc === "preserve", t.enableSeconds) : t.modelType ? t.modelType === "timestamp" ? +P(d) : t.modelType === "iso" ? P(d).toISOString() : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? V(P(d)) : V(P(d), t.modelType, !0) : P(d) : "", m = (d, le = !1, l = !1) => {
    if (l)
      return d;
    if (e("update:model-value", d), v.value.emitTimezone && le) {
      const S = Array.isArray(d) ? d.map((x) => ot(Be(x), v.value.emitTimezone)) : ot(Be(d), v.value.emitTimezone);
      e("update:model-timezone-value", S);
    }
  }, U = (d) => Array.isArray(n.value) ? o.value.enabled ? n.value.map((le) => d(le)) : [
    d(n.value[0]),
    n.value[1] ? d(n.value[1]) : $t(f.value.partialRange)
  ] : d(Be(n.value)), ne = () => {
    if (Array.isArray(n.value)) {
      const d = st(n.value[0], t.weekStart), le = n.value[1] ? st(n.value[1], t.weekStart) : [];
      return [d.map((l) => K(l)), le.map((l) => K(l))];
    }
    return st(n.value, t.weekStart).map((d) => K(d));
  }, u = (d, le) => m(Be(U(d)), !1, le), k = (d) => {
    const le = ne();
    return d ? le : e("update:model-value", ne());
  }, R = (d = !1) => (p(), t.monthPicker ? u(W, d) : t.timePicker ? u(D, d) : t.yearPicker ? u(pe, d) : t.weekPicker ? k(d) : m(_(d), !0, d));
  return {
    inputValue: B,
    internalModelValue: n,
    checkBeforeEmit: () => n.value ? f.value.enabled ? f.value.partialRange ? n.value.length >= 1 : n.value.length === 2 : !!n.value : !1,
    parseExternalModelValue: te,
    formatInputValue: p,
    emitModelValue: R
  };
}, Fl = (e, t) => {
  const { defaultedFilters: r, propDates: n } = Re(e), { validateMonthYearInRange: a } = gt(e), f = (y, T) => {
    let b = y;
    return r.value.months.includes(he(b)) ? (b = T ? kt(y, 1) : Vt(y, 1), f(b, T)) : b;
  }, v = (y, T) => {
    let b = y;
    return r.value.years.includes(pe(b)) ? (b = T ? mn(y, 1) : pn(y, 1), v(b, T)) : b;
  }, o = (y, T = !1) => {
    const b = Ae(K(), { month: e.month, year: e.year });
    let P = y ? kt(b, 1) : Vt(b, 1);
    e.disableYearSelect && (P = nt(P, e.year));
    let V = he(P), D = pe(P);
    r.value.months.includes(V) && (P = f(P, y), V = he(P), D = pe(P)), r.value.years.includes(D) && (P = v(P, y), D = pe(P)), a(V, D, y, e.preventMinMaxNavigation) && O(V, D, T);
  }, O = (y, T, b) => {
    t("update-month-year", { month: y, year: T, fromNav: b });
  }, B = Q(() => (y) => Sn(
    Ae(K(), { month: e.month, year: e.year }),
    n.value.maxDate,
    n.value.minDate,
    e.preventMinMaxNavigation,
    y
  ));
  return { handleMonthYearChange: o, isDisabled: B, updateMonthYear: O };
};
var At = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(At || {});
const Ll = ({
  menuRef: e,
  menuRefInner: t,
  inputRef: r,
  pickerWrapperRef: n,
  inline: a,
  emit: f,
  props: v,
  slots: o
}) => {
  const O = ee({}), B = ee(!1), y = ee({
    top: "0",
    left: "0"
  }), T = ee(!1), b = Lt(v, "teleportCenter");
  mt(b, () => {
    y.value = JSON.parse(JSON.stringify({})), Y();
  });
  const P = (c) => {
    if (v.teleport) {
      const A = c.getBoundingClientRect();
      return {
        left: A.left + window.scrollX,
        top: A.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, V = (c, A) => {
    y.value.left = `${c + A - O.value.width}px`;
  }, D = (c) => {
    y.value.left = `${c}px`;
  }, W = (c, A) => {
    v.position === At.left && D(c), v.position === At.right && V(c, A), v.position === At.center && (y.value.left = `${c + A / 2 - O.value.width / 2}px`);
  }, C = (c) => {
    const { width: A, height: p } = c.getBoundingClientRect(), { top: X, left: I } = v.altPosition ? v.altPosition(c) : P(c);
    return { top: +X, left: +I, width: A, height: p };
  }, L = () => {
    y.value.left = "50%", y.value.top = "50%", y.value.transform = "translate(-50%, -50%)", y.value.position = "fixed", delete y.value.opacity;
  }, N = () => {
    const c = Ie(r), { top: A, left: p, transform: X } = v.altPosition(c);
    y.value = { top: `${A}px`, left: `${p}px`, transform: X ?? "" };
  }, Y = (c = !0) => {
    var A;
    if (!a.value.enabled) {
      if (b.value)
        return L();
      if (v.altPosition !== null)
        return N();
      if (c) {
        const p = v.teleport ? (A = t.value) == null ? void 0 : A.$el : e.value;
        p && (O.value = p.getBoundingClientRect()), f("recalculate-position");
      }
      return re();
    }
  }, z = ({ inputEl: c, left: A, width: p }) => {
    window.screen.width > 768 && !B.value && W(A, p), h(c);
  }, F = (c) => {
    const { top: A, left: p, height: X, width: I } = C(c);
    y.value.top = `${X + A + +v.offset}px`, T.value = !1, B.value || (y.value.left = `${p + I / 2 - O.value.width / 2}px`), z({ inputEl: c, left: p, width: I });
  }, Z = (c) => {
    const { top: A, left: p, width: X } = C(c);
    y.value.top = `${A - +v.offset - O.value.height}px`, T.value = !0, z({ inputEl: c, left: p, width: X });
  }, h = (c) => {
    if (v.autoPosition) {
      const { left: A, width: p } = C(c), { left: X, right: I } = O.value;
      if (!B.value) {
        if (Math.abs(X) !== Math.abs(I)) {
          if (X <= 0)
            return B.value = !0, D(A);
          if (I >= document.documentElement.clientWidth)
            return B.value = !0, V(A, p);
        }
        return W(A, p);
      }
    }
  }, ie = () => {
    const c = Ie(r);
    if (c) {
      const { height: A } = O.value, { top: p, height: X } = c.getBoundingClientRect(), m = window.innerHeight - p - X, U = p;
      return A <= m ? ht.bottom : A > m && A <= U ? ht.top : m >= U ? ht.bottom : ht.top;
    }
    return ht.bottom;
  }, oe = (c) => ie() === ht.bottom ? F(c) : Z(c), re = () => {
    const c = Ie(r);
    if (c)
      return v.autoPosition ? oe(c) : F(c);
  }, _ = function(c) {
    if (c) {
      const A = c.scrollHeight > c.clientHeight, X = window.getComputedStyle(c).overflowY.indexOf("hidden") !== -1;
      return A && !X;
    }
    return !0;
  }, H = function(c) {
    return !c || c === document.body || c.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : _(c) ? c : H(c.assignedSlot ? c.assignedSlot.parentNode : c.parentNode);
  }, te = (c) => {
    if (c)
      switch (v.position) {
        case At.left:
          return { left: 0, transform: "translateX(0)" };
        case At.right:
          return { left: `${c.width}px`, transform: "translateX(-100%)" };
        default:
          return { left: `${c.width / 2}px`, transform: "translateX(-50%)" };
      }
    return {};
  };
  return {
    openOnTop: T,
    menuStyle: y,
    xCorrect: B,
    setMenuPosition: Y,
    getScrollableParent: H,
    shadowRender: (c, A) => {
      var ne, u, k;
      const p = document.createElement("div"), X = (ne = Ie(r)) == null ? void 0 : ne.getBoundingClientRect();
      p.setAttribute("id", "dp--temp-container");
      const I = (u = n.value) != null && u.clientWidth ? n.value : document.body;
      I.append(p);
      const m = te(X), U = Ln(
        c,
        {
          ...A,
          shadow: !0,
          style: { opacity: 0, position: "absolute", ...m }
        },
        Object.fromEntries(
          Object.keys(o).filter((R) => ["right-sidebar", "left-sidebar", "top-extra", "action-extra"].includes(R)).map((R) => [R, o[R]])
        )
      );
      qa(U, p), O.value = (k = U.el) == null ? void 0 : k.getBoundingClientRect(), qa(null, p), I.removeChild(p);
    }
  };
}, dt = [
  { name: "clock-icon", use: ["time", "calendar", "shared"] },
  { name: "arrow-left", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-right", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-up", use: ["time", "calendar", "month-year", "shared"] },
  { name: "arrow-down", use: ["time", "calendar", "month-year", "shared"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar", "shared", "year-mode"] },
  { name: "day", use: ["calendar", "shared"] },
  { name: "month-overlay-value", use: ["calendar", "month-year", "shared"] },
  { name: "year-overlay-value", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "year-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay-header", use: ["month-year", "shared"] },
  { name: "year-overlay-header", use: ["month-year", "shared"] },
  { name: "hours-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "minutes-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "seconds-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "hours", use: ["calendar", "time", "shared"] },
  { name: "minutes", use: ["calendar", "time", "shared"] },
  { name: "month", use: ["calendar", "month-year", "shared"] },
  { name: "year", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "action-buttons", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar", "shared"] },
  { name: "marker-tooltip", use: ["calendar", "shared"] },
  { name: "action-extra", use: ["menu"] },
  { name: "time-picker-overlay", use: ["calendar", "time", "shared"] },
  { name: "am-pm-button", use: ["calendar", "time", "shared"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year", "shared"] },
  { name: "time-picker", use: ["menu", "shared"] },
  { name: "action-row", use: ["action"] },
  { name: "marker", use: ["calendar", "shared"] },
  { name: "quarter", use: ["shared"] },
  { name: "top-extra", use: ["shared", "month-year"] }
], Vl = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], Wl = {
  all: () => dt,
  monthYear: () => dt.filter((e) => e.use.includes("month-year")),
  input: () => Vl,
  timePicker: () => dt.filter((e) => e.use.includes("time")),
  action: () => dt.filter((e) => e.use.includes("action")),
  calendar: () => dt.filter((e) => e.use.includes("calendar")),
  menu: () => dt.filter((e) => e.use.includes("menu")),
  shared: () => dt.filter((e) => e.use.includes("shared")),
  yearMode: () => dt.filter((e) => e.use.includes("year-mode"))
}, Ge = (e, t, r) => {
  const n = [];
  return Wl[t]().forEach((a) => {
    e[a.name] && n.push(a.name);
  }), r != null && r.length && r.forEach((a) => {
    a.slot && n.push(a.slot);
  }), n;
}, Ut = (e) => {
  const t = Q(() => (n) => e.value ? n ? e.value.open : e.value.close : ""), r = Q(() => (n) => e.value ? n ? e.value.menuAppearTop : e.value.menuAppearBottom : "");
  return { transitionName: t, showTransition: !!e.value, menuTransition: r };
}, Kt = (e, t) => {
  const { defaultedRange: r, defaultedTz: n } = Re(e), a = K(ot(K(), n.value.timezone)), f = ee([{ month: he(a), year: pe(a) }]), v = zt({
    hours: r.value.enabled ? [xe(a), xe(a)] : xe(a),
    minutes: r.value.enabled ? [rt(a), rt(a)] : rt(a),
    seconds: r.value.enabled ? [0, 0] : 0
  }), o = Q({
    get: () => e.internalModelValue,
    set: (y) => {
      !e.readonly && !e.disabled && t("update:internal-model-value", y);
    }
  }), O = Q(
    () => (y) => f.value[y] ? f.value[y].month : 0
  ), B = Q(
    () => (y) => f.value[y] ? f.value[y].year : 0
  );
  return {
    calendars: f,
    time: v,
    modelValue: o,
    month: O,
    year: B,
    today: a
  };
}, Hl = (e, t) => {
  const { defaultedMultiCalendars: r, defaultedMultiDates: n, defaultedHighlight: a, defaultedTz: f, propDates: v, defaultedRange: o } = Re(t), { isDisabled: O } = gt(t), B = ee(null), y = ee(ot(/* @__PURE__ */ new Date(), f.value.timezone)), T = (u) => {
    !u.current && t.hideOffsetDates || (B.value = u.value);
  }, b = () => {
    B.value = null;
  }, P = (u) => Array.isArray(e.value) && o.value.enabled && e.value[0] && B.value ? u ? Oe(B.value, e.value[0]) : Ce(B.value, e.value[0]) : !0, V = (u, k) => {
    const R = () => e.value ? k ? e.value[0] || null : e.value[1] : null, de = e.value && Array.isArray(e.value) ? R() : null;
    return be(K(u.value), de);
  }, D = (u) => {
    const k = Array.isArray(e.value) ? e.value[0] : null;
    return u ? !Ce(B.value ?? null, k) : !0;
  }, W = (u, k = !0) => (o.value.enabled || t.weekPicker) && Array.isArray(e.value) && e.value.length === 2 ? t.hideOffsetDates && !u.current ? !1 : be(K(u.value), e.value[k ? 0 : 1]) : o.value.enabled ? V(u, k) && D(k) || be(u.value, Array.isArray(e.value) ? e.value[0] : null) && P(k) : !1, C = (u, k) => {
    if (Array.isArray(e.value) && e.value[0] && e.value.length === 1) {
      const R = be(u.value, B.value);
      return k ? Oe(e.value[0], u.value) && R : Ce(e.value[0], u.value) && R;
    }
    return !1;
  }, L = (u) => !e.value || t.hideOffsetDates && !u.current ? !1 : o.value.enabled ? t.modelAuto && Array.isArray(e.value) ? be(u.value, e.value[0] ? e.value[0] : y.value) : !1 : n.value.enabled && Array.isArray(e.value) ? e.value.some((k) => be(k, u.value)) : be(u.value, e.value ? e.value : y.value), N = (u) => {
    if (o.value.autoRange || t.weekPicker) {
      if (B.value) {
        if (t.hideOffsetDates && !u.current)
          return !1;
        const k = bt(B.value, +o.value.autoRange), R = st(K(B.value), t.weekStart);
        return t.weekPicker ? be(R[1], K(u.value)) : be(k, K(u.value));
      }
      return !1;
    }
    return !1;
  }, Y = (u) => {
    if (o.value.autoRange || t.weekPicker) {
      if (B.value) {
        const k = bt(B.value, +o.value.autoRange);
        if (t.hideOffsetDates && !u.current)
          return !1;
        const R = st(K(B.value), t.weekStart);
        return t.weekPicker ? Oe(u.value, R[0]) && Ce(u.value, R[1]) : Oe(u.value, B.value) && Ce(u.value, k);
      }
      return !1;
    }
    return !1;
  }, z = (u) => {
    if (o.value.autoRange || t.weekPicker) {
      if (B.value) {
        if (t.hideOffsetDates && !u.current)
          return !1;
        const k = st(K(B.value), t.weekStart);
        return t.weekPicker ? be(k[0], u.value) : be(B.value, u.value);
      }
      return !1;
    }
    return !1;
  }, F = (u) => ra(e.value, B.value, u.value), Z = () => t.modelAuto && Array.isArray(t.internalModelValue) ? !!t.internalModelValue[0] : !1, h = () => t.modelAuto ? kn(t.internalModelValue) : !0, ie = (u) => {
    if (t.weekPicker)
      return !1;
    const k = o.value.enabled ? !W(u) && !W(u, !1) : !0;
    return !O(u.value) && !L(u) && !(!u.current && t.hideOffsetDates) && k;
  }, oe = (u) => o.value.enabled ? t.modelAuto ? Z() && L(u) : !1 : L(u), re = (u) => a.value ? fl(u.value, v.value.highlight) : !1, _ = (u) => {
    const k = O(u.value);
    return k && (typeof a.value == "function" ? !a.value(u.value, k) : !a.value.options.highlightDisabled);
  }, H = (u) => {
    var k;
    return typeof a.value == "function" ? a.value(u.value) : (k = a.value.weekdays) == null ? void 0 : k.includes(u.value.getDay());
  }, te = (u) => (o.value.enabled || t.weekPicker) && (!(r.value.count > 0) || u.current) && h() && !(!u.current && t.hideOffsetDates) && !L(u) ? F(u) : !1, E = (u) => {
    const { isRangeStart: k, isRangeEnd: R } = X(u), de = o.value.enabled ? k || R : !1;
    return {
      dp__cell_offset: !u.current,
      dp__pointer: !t.disabled && !(!u.current && t.hideOffsetDates) && !O(u.value),
      dp__cell_disabled: O(u.value),
      dp__cell_highlight: !_(u) && (re(u) || H(u)) && !oe(u) && !de && !z(u) && !(te(u) && t.weekPicker) && !R,
      dp__cell_highlight_active: !_(u) && (re(u) || H(u)) && oe(u),
      dp__today: !t.noToday && be(u.value, y.value) && u.current,
      "dp--past": Ce(u.value, y.value),
      "dp--future": Oe(u.value, y.value)
    };
  }, c = (u) => ({
    dp__active_date: oe(u),
    dp__date_hover: ie(u)
  }), A = (u) => {
    if (e.value && !Array.isArray(e.value)) {
      const k = st(e.value, t.weekStart);
      return {
        ...m(u),
        dp__range_start: be(k[0], u.value),
        dp__range_end: be(k[1], u.value),
        dp__range_between_week: Oe(u.value, k[0]) && Ce(u.value, k[1])
      };
    }
    return {
      ...m(u)
    };
  }, p = (u) => {
    if (e.value && Array.isArray(e.value)) {
      const k = st(e.value[0], t.weekStart), R = e.value[1] ? st(e.value[1], t.weekStart) : [];
      return {
        ...m(u),
        dp__range_start: be(k[0], u.value) || be(R[0], u.value),
        dp__range_end: be(k[1], u.value) || be(R[1], u.value),
        dp__range_between_week: Oe(u.value, k[0]) && Ce(u.value, k[1]) || Oe(u.value, R[0]) && Ce(u.value, R[1]),
        dp__range_between: Oe(u.value, k[1]) && Ce(u.value, R[0])
      };
    }
    return {
      ...m(u)
    };
  }, X = (u) => {
    const k = r.value.count > 0 ? u.current && W(u) && h() : W(u) && h(), R = r.value.count > 0 ? u.current && W(u, !1) && h() : W(u, !1) && h();
    return { isRangeStart: k, isRangeEnd: R };
  }, I = (u) => {
    const { isRangeStart: k, isRangeEnd: R } = X(u);
    return {
      dp__range_start: k,
      dp__range_end: R,
      dp__range_between: te(u),
      dp__date_hover: be(u.value, B.value) && !k && !R && !t.weekPicker,
      dp__date_hover_start: C(u, !0),
      dp__date_hover_end: C(u, !1)
    };
  }, m = (u) => ({
    ...I(u),
    dp__cell_auto_range: Y(u),
    dp__cell_auto_range_start: z(u),
    dp__cell_auto_range_end: N(u)
  }), U = (u) => o.value.enabled ? o.value.autoRange ? m(u) : t.modelAuto ? { ...c(u), ...I(u) } : t.weekPicker ? p(u) : I(u) : t.weekPicker ? A(u) : c(u);
  return {
    setHoverDate: T,
    clearHoverDate: b,
    getDayClassData: (u) => t.hideOffsetDates && !u.current ? {} : {
      ...E(u),
      ...U(u),
      [t.dayClass ? t.dayClass(u.value) : ""]: !0,
      [t.calendarCellClassName]: !!t.calendarCellClassName
    }
  };
}, gt = (e) => {
  const { defaultedFilters: t, defaultedRange: r, propDates: n, defaultedMultiDates: a } = Re(e), f = (_) => n.value.disabledDates ? typeof n.value.disabledDates == "function" ? n.value.disabledDates(K(_)) : !!aa(_, n.value.disabledDates) : !1, v = (_) => {
    const H = n.value.maxDate ? Oe(_, n.value.maxDate) : !1, te = n.value.minDate ? Ce(_, n.value.minDate) : !1, E = f(_), A = t.value.months.map((U) => +U).includes(he(_)), p = e.disabledWeekDays.length ? e.disabledWeekDays.some((U) => +U === Gn(_)) : !1, X = T(_), I = pe(_), m = I < +e.yearRange[0] || I > +e.yearRange[1];
    return !(H || te || E || A || m || p || X);
  }, o = (_, H) => Ce(...ct(n.value.minDate, _, H)) || be(...ct(n.value.minDate, _, H)), O = (_, H) => Oe(...ct(n.value.maxDate, _, H)) || be(...ct(n.value.maxDate, _, H)), B = (_, H, te) => {
    let E = !1;
    return n.value.maxDate && te && O(_, H) && (E = !0), n.value.minDate && !te && o(_, H) && (E = !0), E;
  }, y = (_, H, te, E) => {
    let c = !1;
    return E ? n.value.minDate && n.value.maxDate ? c = B(_, H, te) : (n.value.minDate && o(_, H) || n.value.maxDate && O(_, H)) && (c = !0) : c = !0, c;
  }, T = (_) => Array.isArray(n.value.allowedDates) && !n.value.allowedDates.length ? !0 : n.value.allowedDates ? !aa(_, n.value.allowedDates) : !1, b = (_) => !v(_), P = (_) => r.value.noDisabledRange ? !fn({ start: _[0], end: _[1] }).some((te) => b(te)) : !0, V = (_) => {
    if (_) {
      const H = pe(_);
      return H >= +e.yearRange[0] && H <= e.yearRange[1];
    }
    return !0;
  }, D = (_, H) => !!(Array.isArray(_) && _[H] && (r.value.maxRange || r.value.minRange) && V(_[H])), W = (_, H, te = 0) => {
    if (D(H, te) && V(_)) {
      const E = Qn(_, H[te]), c = An(H[te], _), A = c.length === 1 ? 0 : c.filter((X) => b(X)).length, p = Math.abs(E) - (r.value.minMaxRawRange ? 0 : A);
      if (r.value.minRange && r.value.maxRange)
        return p >= +r.value.minRange && p <= +r.value.maxRange;
      if (r.value.minRange)
        return p >= +r.value.minRange;
      if (r.value.maxRange)
        return p <= +r.value.maxRange;
    }
    return !0;
  }, C = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, L = (_) => Array.isArray(_) ? [_[0] ? $a(_[0]) : null, _[1] ? $a(_[1]) : null] : $a(_), N = (_, H, te) => _.find(
    (E) => +E.hours === xe(H) && E.minutes === "*" ? !0 : +E.minutes === rt(H) && +E.hours === xe(H)
  ) && te, Y = (_, H, te) => {
    const [E, c] = _, [A, p] = H;
    return !N(E, A, te) && !N(c, p, te) && te;
  }, z = (_, H) => {
    const te = Array.isArray(H) ? H : [H];
    return Array.isArray(e.disabledTimes) ? Array.isArray(e.disabledTimes[0]) ? Y(e.disabledTimes, te, _) : !te.some((E) => N(e.disabledTimes, E, _)) : _;
  }, F = (_, H) => {
    const te = Array.isArray(H) ? [wt(H[0]), H[1] ? wt(H[1]) : void 0] : wt(H), E = !e.disabledTimes(te);
    return _ && E;
  }, Z = (_, H) => e.disabledTimes ? Array.isArray(e.disabledTimes) ? z(H, _) : F(H, _) : H, h = (_) => {
    let H = !0;
    if (!_ || C())
      return !0;
    const te = !n.value.minDate && !n.value.maxDate ? L(_) : _;
    return (e.maxTime || n.value.maxDate) && (H = ln(
      e.maxTime,
      n.value.maxDate,
      "max",
      Be(te),
      H
    )), (e.minTime || n.value.minDate) && (H = ln(
      e.minTime,
      n.value.minDate,
      "min",
      Be(te),
      H
    )), Z(_, H);
  }, ie = (_) => {
    if (!e.monthPicker)
      return !0;
    let H = !0;
    const te = K(Ze(_));
    if (n.value.minDate && n.value.maxDate) {
      const E = K(Ze(n.value.minDate)), c = K(Ze(n.value.maxDate));
      return Oe(te, E) && Ce(te, c) || be(te, E) || be(te, c);
    }
    if (n.value.minDate) {
      const E = K(Ze(n.value.minDate));
      H = Oe(te, E) || be(te, E);
    }
    if (n.value.maxDate) {
      const E = K(Ze(n.value.maxDate));
      H = Ce(te, E) || be(te, E);
    }
    return H;
  }, oe = Q(() => (_) => !e.enableTimePicker || e.ignoreTimeValidation ? !0 : h(_)), re = Q(() => (_) => e.monthPicker ? Array.isArray(_) && (r.value.enabled || a.value.enabled) ? !_.filter((te) => !ie(te)).length : ie(_) : !0);
  return {
    isDisabled: b,
    validateDate: v,
    validateMonthYearInRange: y,
    isDateRangeAllowed: P,
    checkMinMaxRange: W,
    isValidTime: h,
    isTimeValid: oe,
    isMonthValid: re
  };
}, oa = () => {
  const e = Q(() => (n, a) => n == null ? void 0 : n.includes(a)), t = Q(() => (n, a) => n.count ? n.solo ? !0 : a === 0 : !0), r = Q(() => (n, a) => n.count ? n.solo ? !0 : a === n.count - 1 : !0);
  return { hideNavigationButtons: e, showLeftIcon: t, showRightIcon: r };
}, zl = (e, t, r) => {
  const n = ee(0), a = zt({
    [Mt.timePicker]: !e.enableTimePicker || e.timePicker || e.monthPicker,
    [Mt.calendar]: !1,
    [Mt.header]: !1
  }), f = Q(() => e.monthPicker), v = (T) => {
    var b;
    if ((b = e.flow) != null && b.length) {
      if (!T && f.value)
        return y();
      a[T] = !0, Object.keys(a).filter((P) => !a[P]).length || y();
    }
  }, o = () => {
    var T;
    (T = e.flow) != null && T.length && n.value !== -1 && (n.value += 1, t("flow-step", n.value), y());
  }, O = () => {
    n.value = -1;
  }, B = (T, b, ...P) => {
    var V, D;
    e.flow[n.value] === T && r.value && ((D = (V = r.value)[b]) == null || D.call(V, ...P));
  }, y = () => {
    B(at.month, "toggleMonthPicker", !0), B(at.year, "toggleYearPicker", !0), B(at.calendar, "toggleTimePicker", !1, !0), B(at.time, "toggleTimePicker", !0, !0);
    const T = e.flow[n.value];
    (T === at.hours || T === at.minutes || T === at.seconds) && B(T, "toggleTimePicker", !0, !0, T);
  };
  return { childMount: v, updateFlowStep: o, resetFlow: O, flowStep: n };
}, sa = {
  multiCalendars: { type: [Boolean, Number, String, Object], default: void 0 },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  autoPosition: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: [String, Object], default: null },
  emitTimezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  disableYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: null },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetDates: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Function, Object],
    default: null
  },
  teleport: { type: [Boolean, String, Object], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function, Object],
    default: null
  },
  calendarClassName: { type: String, default: null },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: [Object, Boolean], default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: [Boolean, Object], default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: [Boolean, Object], default: !1 },
  textInput: { type: [Boolean, Object], default: !1 },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: [Boolean, String], default: !1 },
  actionRow: { type: Object, default: () => ({}) },
  focusStartDate: { type: Boolean, default: !1 },
  disabledTimes: { type: [Function, Array], default: void 0 },
  showLastInRange: { type: Boolean, default: !0 },
  timePickerInline: { type: Boolean, default: !1 },
  calendar: { type: Function, default: null },
  config: { type: Object, default: void 0 },
  quarterPicker: { type: Boolean, default: !1 },
  yearFirst: { type: Boolean, default: !1 },
  loading: { type: Boolean, default: !1 },
  onInternalModelChange: { type: [Function, Object], default: null },
  enableMinutes: { type: Boolean, default: !0 }
}, tt = {
  ...sa,
  shadow: { type: Boolean, default: !1 },
  flowStep: { type: Number, default: 0 },
  internalModelValue: { type: [Date, Array], default: null },
  noOverlayFocus: { type: Boolean, default: !1 },
  collapse: { type: Boolean, default: !1 },
  menuWrapRef: { type: Object, default: null },
  getInputRect: { type: Function, default: () => ({}) }
}, Ul = {
  key: 1,
  class: "dp__input_wrap"
}, Kl = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "aria-label", "aria-disabled", "aria-invalid"], jl = {
  key: 2,
  class: "dp__clear_icon"
}, Gl = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...sa
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur",
    "real-blur"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, {
      defaultedTextInput: f,
      defaultedAriaLabels: v,
      defaultedInline: o,
      defaultedConfig: O,
      defaultedRange: B,
      defaultedMultiDates: y,
      getDefaultPattern: T,
      getDefaultStartTime: b
    } = Re(a), { checkMinMaxRange: P } = gt(a), V = ee(), D = ee(null), W = ee(!1), C = ee(!1), L = Q(
      () => ({
        dp__pointer: !a.disabled && !a.readonly && !f.value.enabled,
        dp__disabled: a.disabled,
        dp__input_readonly: !f.value.enabled,
        dp__input: !0,
        dp__input_icon_pad: !a.hideInputIcon,
        dp__input_valid: !!a.state,
        dp__input_invalid: a.state === !1,
        dp__input_focus: W.value || a.isMenuOpen,
        dp__input_reg: !f.value.enabled,
        [a.inputClassName]: !!a.inputClassName
      })
    ), N = () => {
      n("set-input-date", null), a.clearable && a.autoApply && (n("set-empty-date"), V.value = null);
    }, Y = (p) => {
      const X = b();
      return vl(
        p,
        f.value.format ?? T(),
        X ?? Tn({}, a.enableSeconds),
        a.inputValue,
        C.value,
        a.formatLocale
      );
    }, z = (p) => {
      const { rangeSeparator: X } = f.value, [I, m] = p.split(`${X}`);
      if (I) {
        const U = Y(I.trim()), ne = m ? Y(m.trim()) : null;
        if (St(U, ne))
          return;
        const u = U && ne ? [U, ne] : [U];
        P(ne, u, 0) && (V.value = U ? u : null);
      }
    }, F = () => {
      C.value = !0;
    }, Z = (p) => {
      if (B.value.enabled)
        z(p);
      else if (y.value.enabled) {
        const X = p.split(";");
        V.value = X.map((I) => Y(I.trim())).filter((I) => I);
      } else
        V.value = Y(p);
    }, h = (p) => {
      var I;
      const X = typeof p == "string" ? p : (I = p.target) == null ? void 0 : I.value;
      X !== "" ? (f.value.openMenu && !a.isMenuOpen && n("open"), Z(X), n("set-input-date", V.value)) : N(), C.value = !1, n("update:input-value", X);
    }, ie = (p) => {
      f.value.enabled ? (Z(p.target.value), f.value.enterSubmit && Ba(V.value) && a.inputValue !== "" ? (n("set-input-date", V.value, !0), V.value = null) : f.value.enterSubmit && a.inputValue === "" && (V.value = null, n("clear"))) : _(p);
    }, oe = (p) => {
      f.value.enabled && f.value.tabSubmit && Z(p.target.value), f.value.tabSubmit && Ba(V.value) && a.inputValue !== "" ? (n("set-input-date", V.value, !0, !0), V.value = null) : f.value.tabSubmit && a.inputValue === "" && (V.value = null, n("clear", !0));
    }, re = () => {
      W.value = !0, n("focus"), et().then(() => {
        var p;
        f.value.enabled && f.value.selectOnFocus && ((p = D.value) == null || p.select());
      });
    }, _ = (p) => {
      p.preventDefault(), ft(p, O.value, !0), f.value.enabled && f.value.openMenu && !o.value.input && !a.isMenuOpen ? n("open") : f.value.enabled || n("toggle");
    }, H = () => {
      n("real-blur"), W.value = !1, (!a.isMenuOpen || o.value.enabled && o.value.input) && n("blur"), a.autoApply && f.value.enabled && V.value && !a.isMenuOpen && (n("set-input-date", V.value), n("select-date"), V.value = null);
    }, te = (p) => {
      ft(p, O.value, !0), n("clear");
    }, E = (p) => {
      if (!f.value.enabled) {
        if (p.code === "Tab")
          return;
        p.preventDefault();
      }
    };
    return t({
      focusInput: () => {
        var p;
        (p = D.value) == null || p.focus({ preventScroll: !0 });
      },
      setParsedDate: (p) => {
        V.value = p;
      }
    }), (p, X) => {
      var I;
      return M(), j("div", { onClick: _ }, [
        p.$slots.trigger && !p.$slots["dp-input"] && !i(o).enabled ? se(p.$slots, "trigger", { key: 0 }) : q("", !0),
        !p.$slots.trigger && (!i(o).enabled || i(o).input) ? (M(), j("div", Ul, [
          p.$slots["dp-input"] && !p.$slots.trigger && (!i(o).enabled || i(o).enabled && i(o).input) ? se(p.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            isMenuOpen: e.isMenuOpen,
            onInput: h,
            onEnter: ie,
            onTab: oe,
            onClear: te,
            onBlur: H,
            onKeypress: E,
            onPaste: F,
            openMenu: () => p.$emit("open"),
            closeMenu: () => p.$emit("close"),
            toggleMenu: () => p.$emit("toggle")
          }) : q("", !0),
          p.$slots["dp-input"] ? q("", !0) : (M(), j("input", {
            key: 1,
            id: p.uid ? `dp-input-${p.uid}` : void 0,
            ref_key: "inputRef",
            ref: D,
            "data-test": "dp-input",
            name: p.name,
            class: Me(L.value),
            inputmode: i(f).enabled ? "text" : "none",
            placeholder: p.placeholder,
            disabled: p.disabled,
            readonly: p.readonly,
            required: p.required,
            value: e.inputValue,
            autocomplete: p.autocomplete,
            "aria-label": (I = i(v)) == null ? void 0 : I.input,
            "aria-disabled": p.disabled || void 0,
            "aria-invalid": p.state === !1 ? !0 : void 0,
            onInput: h,
            onKeydown: [
              fe(ie, ["enter"]),
              fe(oe, ["tab"]),
              E
            ],
            onBlur: H,
            onFocus: re,
            onKeypress: E,
            onPaste: F
          }, null, 42, Kl)),
          ce("div", {
            onClick: X[2] || (X[2] = (m) => n("toggle"))
          }, [
            p.$slots["input-icon"] && !p.hideInputIcon ? (M(), j("span", {
              key: 0,
              class: "dp__input_icon",
              onClick: X[0] || (X[0] = (m) => n("toggle"))
            }, [
              se(p.$slots, "input-icon")
            ])) : q("", !0),
            !p.$slots["input-icon"] && !p.hideInputIcon && !p.$slots["dp-input"] ? (M(), we(i(Ot), {
              key: 1,
              class: "dp__input_icon dp__input_icons",
              onClick: X[1] || (X[1] = (m) => n("toggle"))
            })) : q("", !0)
          ]),
          p.$slots["clear-icon"] && e.inputValue && p.clearable && !p.disabled && !p.readonly ? (M(), j("span", jl, [
            se(p.$slots, "clear-icon", { clear: te })
          ])) : q("", !0),
          p.clearable && !p.$slots["clear-icon"] && e.inputValue && !p.disabled && !p.readonly ? (M(), we(i(yn), {
            key: 3,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: X[3] || (X[3] = $e((m) => te(m), ["prevent"]))
          })) : q("", !0)
        ])) : q("", !0)
      ]);
    };
  }
}), Ql = ["title"], ql = ["disabled"], Xl = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    calendarWidth: { type: Number, default: 0 },
    ...tt
  },
  emits: ["close-picker", "select-date", "select-now", "invalid-select"],
  setup(e, { emit: t }) {
    const r = t, n = e, {
      defaultedActionRow: a,
      defaultedPreviewFormat: f,
      defaultedMultiCalendars: v,
      defaultedTextInput: o,
      defaultedInline: O,
      defaultedRange: B,
      defaultedMultiDates: y,
      getDefaultPattern: T
    } = Re(n), { isTimeValid: b, isMonthValid: P } = gt(n), { buildMatrix: V } = pt(), D = ee(null), W = ee(null), C = ee(!1), L = ee({}), N = ee(null), Y = ee(null);
    ze(() => {
      n.arrowNavigation && V([Ie(D), Ie(W)], "actionRow"), z(), window.addEventListener("resize", z);
    }), na(() => {
      window.removeEventListener("resize", z);
    });
    const z = () => {
      C.value = !1, setTimeout(() => {
        var A, p;
        const E = (A = N.value) == null ? void 0 : A.getBoundingClientRect(), c = (p = Y.value) == null ? void 0 : p.getBoundingClientRect();
        E && c && (L.value.maxWidth = `${c.width - E.width - 20}px`), C.value = !0;
      }, 0);
    }, F = Q(() => B.value.enabled && !B.value.partialRange && n.internalModelValue ? n.internalModelValue.length === 2 : !0), Z = Q(
      () => !b.value(n.internalModelValue) || !P.value(n.internalModelValue) || !F.value
    ), h = () => {
      const E = f.value;
      return n.timePicker || n.monthPicker, E(Be(n.internalModelValue));
    }, ie = () => {
      const E = n.internalModelValue;
      return v.value.count > 0 ? `${oe(E[0])} - ${oe(E[1])}` : [oe(E[0]), oe(E[1])];
    }, oe = (E) => Pn(
      E,
      f.value,
      n.formatLocale,
      o.value.rangeSeparator,
      n.modelAuto,
      T()
    ), re = Q(() => !n.internalModelValue || !n.menuMount ? "" : typeof f.value == "string" ? Array.isArray(n.internalModelValue) ? n.internalModelValue.length === 2 && n.internalModelValue[1] ? ie() : y.value.enabled ? n.internalModelValue.map((E) => `${oe(E)}`) : n.modelAuto ? `${oe(n.internalModelValue[0])}` : `${oe(n.internalModelValue[0])} -` : oe(n.internalModelValue) : h()), _ = () => y.value.enabled ? "; " : " - ", H = Q(
      () => Array.isArray(re.value) ? re.value.join(_()) : re.value
    ), te = () => {
      b.value(n.internalModelValue) && P.value(n.internalModelValue) && F.value ? r("select-date") : r("invalid-select");
    };
    return (E, c) => (M(), j("div", {
      ref_key: "actionRowRef",
      ref: Y,
      class: "dp__action_row"
    }, [
      E.$slots["action-row"] ? se(E.$slots, "action-row", Ye(Ve({ key: 0 }, {
        internalModelValue: E.internalModelValue,
        disabled: Z.value,
        selectDate: () => E.$emit("select-date"),
        closePicker: () => E.$emit("close-picker")
      }))) : (M(), j(ke, { key: 1 }, [
        i(a).showPreview ? (M(), j("div", {
          key: 0,
          class: "dp__selection_preview",
          title: H.value,
          style: qe(L.value)
        }, [
          E.$slots["action-preview"] && C.value ? se(E.$slots, "action-preview", {
            key: 0,
            value: E.internalModelValue
          }) : q("", !0),
          !E.$slots["action-preview"] && C.value ? (M(), j(ke, { key: 1 }, [
            it(Le(H.value), 1)
          ], 64)) : q("", !0)
        ], 12, Ql)) : q("", !0),
        ce("div", {
          ref_key: "actionBtnContainer",
          ref: N,
          class: "dp__action_buttons",
          "data-dp-element": "action-row"
        }, [
          E.$slots["action-buttons"] ? se(E.$slots, "action-buttons", {
            key: 0,
            value: E.internalModelValue
          }) : q("", !0),
          E.$slots["action-buttons"] ? q("", !0) : (M(), j(ke, { key: 1 }, [
            !i(O).enabled && i(a).showCancel ? (M(), j("button", {
              key: 0,
              ref_key: "cancelButtonRef",
              ref: D,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: c[0] || (c[0] = (A) => E.$emit("close-picker")),
              onKeydown: [
                c[1] || (c[1] = fe((A) => E.$emit("close-picker"), ["enter"])),
                c[2] || (c[2] = fe((A) => E.$emit("close-picker"), ["space"]))
              ]
            }, Le(E.cancelText), 545)) : q("", !0),
            i(a).showNow ? (M(), j("button", {
              key: 1,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: c[3] || (c[3] = (A) => E.$emit("select-now")),
              onKeydown: [
                c[4] || (c[4] = fe((A) => E.$emit("select-now"), ["enter"])),
                c[5] || (c[5] = fe((A) => E.$emit("select-now"), ["space"]))
              ]
            }, Le(E.nowButtonLabel), 33)) : q("", !0),
            i(a).showSelect ? (M(), j("button", {
              key: 2,
              ref_key: "selectButtonRef",
              ref: W,
              type: "button",
              class: "dp__action_button dp__action_select",
              disabled: Z.value,
              "data-test": "select-button",
              onKeydown: [
                fe(te, ["enter"]),
                fe(te, ["space"])
              ],
              onClick: te
            }, Le(E.selectText), 41, ql)) : q("", !0)
          ], 64))
        ], 512)
      ], 64))
    ], 512));
  }
}), Jl = ["onKeydown"], Zl = { class: "dp__selection_grid_header" }, xl = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], er = ["aria-label"], jt = /* @__PURE__ */ Ne({
  __name: "SelectionOverlay",
  props: {
    items: {},
    type: {},
    isLast: { type: Boolean },
    arrowNavigation: { type: Boolean },
    skipButtonRef: { type: Boolean },
    headerRefs: {},
    hideNavigation: {},
    escClose: { type: Boolean },
    useRelative: { type: Boolean },
    height: {},
    textInput: { type: [Boolean, Object] },
    config: {},
    noOverlayFocus: { type: Boolean },
    focusValue: {},
    menuWrapRef: {},
    ariaLabels: {}
  },
  emits: ["selected", "toggle", "reset-flow", "hover-value"],
  setup(e, { expose: t, emit: r }) {
    const { setSelectionGrid: n, buildMultiLevelMatrix: a, setMonthPicker: f } = pt(), v = r, o = e, { defaultedAriaLabels: O, defaultedTextInput: B, defaultedConfig: y } = Re(
      o
    ), { hideNavigationButtons: T } = oa(), b = ee(!1), P = ee(null), V = ee(null), D = ee([]), W = ee(), C = ee(null), L = ee(0), N = ee(null);
    Vn(() => {
      P.value = null;
    }), ze(() => {
      et().then(() => re()), o.noOverlayFocus || z(), Y(!0);
    }), na(() => Y(!1));
    const Y = (I) => {
      var m;
      o.arrowNavigation && ((m = o.headerRefs) != null && m.length ? f(I) : n(I));
    }, z = () => {
      var m;
      const I = Ie(V);
      I && (B.value.enabled || (P.value ? (m = P.value) == null || m.focus({ preventScroll: !0 }) : I.focus({ preventScroll: !0 })), b.value = I.clientHeight < I.scrollHeight);
    }, F = Q(
      () => ({
        dp__overlay: !0,
        "dp--overlay-absolute": !o.useRelative,
        "dp--overlay-relative": o.useRelative
      })
    ), Z = Q(
      () => o.useRelative ? { height: `${o.height}px`, width: "260px" } : void 0
    ), h = Q(() => ({
      dp__overlay_col: !0
    })), ie = Q(
      () => ({
        dp__btn: !0,
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: b.value,
        dp__button_bottom: o.isLast
      })
    ), oe = Q(() => {
      var I, m;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((I = o.items) == null ? void 0 : I.length) <= 6,
        dp__container_block: ((m = o.items) == null ? void 0 : m.length) > 6
      };
    });
    mt(
      () => o.items,
      () => re(!1),
      { deep: !0 }
    );
    const re = (I = !0) => {
      et().then(() => {
        const m = Ie(P), U = Ie(V), ne = Ie(C), u = Ie(N), k = ne ? ne.getBoundingClientRect().height : 0;
        U && (U.getBoundingClientRect().height ? L.value = U.getBoundingClientRect().height - k : L.value = y.value.modeHeight - k), m && u && I && (u.scrollTop = m.offsetTop - u.offsetTop - (L.value / 2 - m.getBoundingClientRect().height) - k);
      });
    }, _ = (I) => {
      I.disabled || v("selected", I.value);
    }, H = () => {
      v("toggle"), v("reset-flow");
    }, te = () => {
      o.escClose && H();
    }, E = (I, m, U, ne) => {
      I && ((m.active || m.value === o.focusValue) && (P.value = I), o.arrowNavigation && (Array.isArray(D.value[U]) ? D.value[U][ne] = I : D.value[U] = [I], c()));
    }, c = () => {
      var m, U;
      const I = (m = o.headerRefs) != null && m.length ? [o.headerRefs].concat(D.value) : D.value.concat([o.skipButtonRef ? [] : [C.value]]);
      a(Be(I), (U = o.headerRefs) != null && U.length ? "monthPicker" : "selectionGrid");
    }, A = (I) => {
      o.arrowNavigation || ft(I, y.value, !0);
    }, p = (I) => {
      W.value = I, v("hover-value", I);
    }, X = () => {
      if (H(), !o.isLast) {
        const I = cl(o.menuWrapRef ?? null, "action-row");
        if (I) {
          const m = wn(I);
          m == null || m.focus();
        }
      }
    };
    return t({ focusGrid: z }), (I, m) => {
      var U;
      return M(), j("div", {
        ref_key: "gridWrapRef",
        ref: V,
        class: Me(F.value),
        style: qe(Z.value),
        role: "dialog",
        tabindex: "0",
        onKeydown: [
          fe($e(te, ["prevent"]), ["esc"]),
          m[0] || (m[0] = fe($e((ne) => A(ne), ["prevent"]), ["left"])),
          m[1] || (m[1] = fe($e((ne) => A(ne), ["prevent"]), ["up"])),
          m[2] || (m[2] = fe($e((ne) => A(ne), ["prevent"]), ["down"])),
          m[3] || (m[3] = fe($e((ne) => A(ne), ["prevent"]), ["right"]))
        ]
      }, [
        ce("div", {
          ref_key: "containerRef",
          ref: N,
          class: Me(oe.value),
          role: "grid",
          style: qe({ "--dp-overlay-height": `${L.value}px` })
        }, [
          ce("div", Zl, [
            se(I.$slots, "header")
          ]),
          I.$slots.overlay ? se(I.$slots, "overlay", { key: 0 }) : (M(!0), j(ke, { key: 1 }, Pe(I.items, (ne, u) => (M(), j("div", {
            key: u,
            class: Me(["dp__overlay_row", { dp__flex_row: I.items.length >= 3 }]),
            role: "row"
          }, [
            (M(!0), j(ke, null, Pe(ne, (k, R) => (M(), j("div", {
              key: k.value,
              ref_for: !0,
              ref: (de) => E(de, k, u, R),
              role: "gridcell",
              class: Me(h.value),
              "aria-selected": k.active || void 0,
              "aria-disabled": k.disabled || void 0,
              tabindex: "0",
              "data-test": k.text,
              onClick: (de) => _(k),
              onKeydown: [
                fe($e((de) => _(k), ["prevent"]), ["enter"]),
                fe($e((de) => _(k), ["prevent"]), ["space"])
              ],
              onMouseover: (de) => p(k.value)
            }, [
              ce("div", {
                class: Me(k.className)
              }, [
                I.$slots.item ? se(I.$slots, "item", {
                  key: 0,
                  item: k
                }) : q("", !0),
                I.$slots.item ? q("", !0) : (M(), j(ke, { key: 1 }, [
                  it(Le(k.text), 1)
                ], 64))
              ], 2)
            ], 42, xl))), 128))
          ], 2))), 128))
        ], 6),
        I.$slots["button-icon"] ? xt((M(), j("button", {
          key: 0,
          ref_key: "toggleButton",
          ref: C,
          type: "button",
          "aria-label": (U = i(O)) == null ? void 0 : U.toggleOverlay,
          class: Me(ie.value),
          tabindex: "0",
          onClick: H,
          onKeydown: [
            fe(H, ["enter"]),
            fe(X, ["tab"])
          ]
        }, [
          se(I.$slots, "button-icon")
        ], 42, er)), [
          [ea, !i(T)(I.hideNavigation, I.type)]
        ]) : q("", !0)
      ], 46, Jl);
    };
  }
}), ua = /* @__PURE__ */ Ne({
  __name: "InstanceWrap",
  props: {
    multiCalendars: {},
    stretch: { type: Boolean },
    collapse: { type: Boolean }
  },
  setup(e) {
    const t = e, r = Q(
      () => t.multiCalendars > 0 ? [...Array(t.multiCalendars).keys()] : [0]
    ), n = Q(() => ({
      dp__instance_calendar: t.multiCalendars > 0
    }));
    return (a, f) => (M(), j("div", {
      class: Me({
        dp__menu_inner: !a.stretch,
        "dp--menu--inner-stretched": a.stretch,
        dp__flex_display: a.multiCalendars > 0,
        "dp--flex-display-collapsed": a.collapse
      })
    }, [
      (M(!0), j(ke, null, Pe(r.value, (v, o) => (M(), j("div", {
        key: v,
        class: Me(n.value)
      }, [
        se(a.$slots, "default", {
          instance: v,
          index: o
        })
      ], 2))), 128))
    ], 2));
  }
}), tr = ["aria-label", "aria-disabled"], Ft = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "ArrowBtn",
  props: {
    ariaLabel: {},
    disabled: { type: Boolean }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: t }) {
    const r = t, n = ee(null);
    return ze(() => r("set-ref", n)), (a, f) => (M(), j("button", {
      ref_key: "elRef",
      ref: n,
      type: "button",
      class: "dp__btn dp--arrow-btn-nav",
      tabindex: "0",
      "aria-label": a.ariaLabel,
      "aria-disabled": a.disabled || void 0,
      onClick: f[0] || (f[0] = (v) => a.$emit("activate")),
      onKeydown: [
        f[1] || (f[1] = fe($e((v) => a.$emit("activate"), ["prevent"]), ["enter"])),
        f[2] || (f[2] = fe($e((v) => a.$emit("activate"), ["prevent"]), ["space"]))
      ]
    }, [
      ce("span", {
        class: Me(["dp__inner_nav", { dp__inner_nav_disabled: a.disabled }])
      }, [
        se(a.$slots, "default")
      ], 2)
    ], 40, tr));
  }
}), ar = { class: "dp--year-mode-picker" }, nr = ["aria-label", "data-test"], _n = /* @__PURE__ */ Ne({
  __name: "YearModePicker",
  props: {
    ...tt,
    showYearPicker: { type: Boolean, default: !1 },
    items: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    isDisabled: { type: Function, default: () => !1 }
  },
  emits: ["toggle-year-picker", "year-select", "handle-year"],
  setup(e, { emit: t }) {
    const r = t, n = e, { showRightIcon: a, showLeftIcon: f } = oa(), { defaultedConfig: v, defaultedMultiCalendars: o, defaultedAriaLabels: O, defaultedTransitions: B } = Re(n), { showTransition: y, transitionName: T } = Ut(B), b = (D = !1, W) => {
      r("toggle-year-picker", { flow: D, show: W });
    }, P = (D) => {
      r("year-select", D);
    }, V = (D = !1) => {
      r("handle-year", D);
    };
    return (D, W) => {
      var C, L, N;
      return M(), j("div", ar, [
        i(f)(i(o), e.instance) ? (M(), we(Ft, {
          key: 0,
          ref: "mpPrevIconRef",
          "aria-label": (C = i(O)) == null ? void 0 : C.prevYear,
          disabled: e.isDisabled(!1),
          onActivate: W[0] || (W[0] = (Y) => V(!1))
        }, {
          default: ye(() => [
            D.$slots["arrow-left"] ? se(D.$slots, "arrow-left", { key: 0 }) : q("", !0),
            D.$slots["arrow-left"] ? q("", !0) : (M(), we(i(Ea), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : q("", !0),
        ce("button", {
          ref: "mpYearButtonRef",
          class: "dp__btn dp--year-select",
          type: "button",
          "aria-label": (L = i(O)) == null ? void 0 : L.openYearsOverlay,
          "data-test": `year-mode-btn-${e.instance}`,
          onClick: W[1] || (W[1] = () => b(!1)),
          onKeydown: W[2] || (W[2] = fe(() => b(!1), ["enter"]))
        }, [
          D.$slots.year ? se(D.$slots, "year", {
            key: 0,
            year: e.year
          }) : q("", !0),
          D.$slots.year ? q("", !0) : (M(), j(ke, { key: 1 }, [
            it(Le(e.year), 1)
          ], 64))
        ], 40, nr),
        i(a)(i(o), e.instance) ? (M(), we(Ft, {
          key: 1,
          ref: "mpNextIconRef",
          "aria-label": (N = i(O)) == null ? void 0 : N.nextYear,
          disabled: e.isDisabled(!0),
          onActivate: W[3] || (W[3] = (Y) => V(!0))
        }, {
          default: ye(() => [
            D.$slots["arrow-right"] ? se(D.$slots, "arrow-right", { key: 0 }) : q("", !0),
            D.$slots["arrow-right"] ? q("", !0) : (M(), we(i(Fa), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : q("", !0),
        Xe(_t, {
          name: i(T)(e.showYearPicker),
          css: i(y)
        }, {
          default: ye(() => [
            e.showYearPicker ? (M(), we(jt, {
              key: 0,
              items: e.items,
              "text-input": D.textInput,
              "esc-close": D.escClose,
              config: D.config,
              "is-last": D.autoApply && !i(v).keepActionRow,
              "hide-navigation": D.hideNavigation,
              "aria-labels": D.ariaLabels,
              type: "year",
              onToggle: b,
              onSelected: W[4] || (W[4] = (Y) => P(Y))
            }, He({
              "button-icon": ye(() => [
                D.$slots["calendar-icon"] ? se(D.$slots, "calendar-icon", { key: 0 }) : q("", !0),
                D.$slots["calendar-icon"] ? q("", !0) : (M(), we(i(Ot), { key: 1 }))
              ]),
              _: 2
            }, [
              D.$slots["year-overlay-value"] ? {
                name: "item",
                fn: ye(({ item: Y }) => [
                  se(D.$slots, "year-overlay-value", {
                    text: Y.text,
                    value: Y.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "text-input", "esc-close", "config", "is-last", "hide-navigation", "aria-labels"])) : q("", !0)
          ]),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), ja = (e, t, r) => {
  if (t.value && Array.isArray(t.value))
    if (t.value.some((n) => be(e, n))) {
      const n = t.value.filter((a) => !be(a, e));
      t.value = n.length ? n : null;
    } else
      (r && +r > t.value.length || !r) && t.value.push(e);
  else
    t.value = [e];
}, Ga = (e, t, r) => {
  let n = e.value ? e.value.slice() : [];
  return n.length === 2 && n[1] !== null && (n = []), n.length ? Ce(t, n[0]) ? (n.unshift(t), r("range-start", n[0]), r("range-start", n[1])) : (n[1] = t, r("range-end", t)) : (n = [t], r("range-start", t)), n;
}, ia = (e, t, r, n) => {
  e && (e[0] && e[1] && r && t("auto-apply"), e[0] && !e[1] && n && r && t("auto-apply"));
}, On = (e) => {
  Array.isArray(e.value) && e.value.length <= 2 && e.range ? e.modelValue.value = e.value.map((t) => ot(K(t), e.timezone)) : Array.isArray(e.value) || (e.modelValue.value = ot(K(e.value), e.timezone));
}, Bn = (e, t, r, n) => Array.isArray(t.value) && (t.value.length === 2 || t.value.length === 1 && n.value.partialRange) ? n.value.fixedStart && (Oe(e, t.value[0]) || be(e, t.value[0])) ? [t.value[0], e] : n.value.fixedEnd && (Ce(e, t.value[1]) || be(e, t.value[1])) ? [e, t.value[1]] : (r("invalid-fixed-range", e), t.value) : [], Yn = ({
  multiCalendars: e,
  highlight: t,
  propDates: r,
  calendars: n,
  modelValue: a,
  props: f,
  filters: v,
  year: o,
  month: O,
  emit: B
}) => {
  const y = Q(() => Ha(f.yearRange, f.locale, f.reverseYears)), T = ee([!1]), b = Q(() => (F, Z) => {
    const h = Ae(Ze(/* @__PURE__ */ new Date()), {
      month: O.value(F),
      year: o.value(F)
    });
    return Sn(
      h,
      r.value.maxDate,
      r.value.minDate,
      f.preventMinMaxNavigation,
      Z
    );
  }), P = () => {
    for (let F = 0; F < e.value.count; F++)
      if (F === 0)
        n.value[F] = n.value[0];
      else {
        const Z = Ae(K(), n.value[F - 1]);
        n.value[F] = { month: he(Z), year: pe(mn(Z, 1)) };
      }
  }, V = (F) => {
    if (!F)
      return P();
    const Z = Ae(K(), n.value[F]);
    return n.value[0].year = pe(pn(Z, e.value.count - 1)), P();
  }, D = (F) => f.focusStartDate ? F[0] : F[1] ? F[1] : F[0], W = () => {
    if (a.value) {
      const F = Array.isArray(a.value) ? D(a.value) : a.value;
      n.value[0] = { month: he(F), year: pe(F) };
    }
  };
  ze(() => {
    W(), e.value.count && P();
  });
  const C = (F, Z) => {
    n.value[Z].year = F, e.value.count && !e.value.solo && V(Z);
  }, L = Q(() => (F) => Rt(y.value, (Z) => {
    var re;
    const h = o.value(F) === Z.value, ie = Ht(
      Z.value,
      Ct(r.value.minDate),
      Ct(r.value.maxDate)
    ) || ((re = v.value.years) == null ? void 0 : re.includes(o.value(F))), oe = Ka(t.value, Z.value);
    return { active: h, disabled: ie, highlighted: oe };
  })), N = (F, Z) => {
    C(F, Z), z(Z);
  }, Y = (F, Z = !1) => {
    if (!b.value(F, Z)) {
      const h = Z ? o.value(F) + 1 : o.value(F) - 1;
      C(h, F);
    }
  }, z = (F, Z = !1, h) => {
    Z || B("reset-flow"), h !== void 0 ? T.value[F] = h : T.value[F] = !T.value[F], T.value || B("overlay-closed");
  };
  return {
    isDisabled: b,
    groupedYears: L,
    showYearPicker: T,
    selectYear: C,
    toggleYearPicker: z,
    handleYearSelect: N,
    handleYear: Y
  };
}, lr = (e, t) => {
  const {
    defaultedMultiCalendars: r,
    defaultedAriaLabels: n,
    defaultedTransitions: a,
    defaultedConfig: f,
    defaultedRange: v,
    defaultedHighlight: o,
    propDates: O,
    defaultedTz: B,
    defaultedFilters: y,
    defaultedMultiDates: T
  } = Re(e), { modelValue: b, year: P, month: V, calendars: D } = Kt(e, t), W = Q(() => bn(e.formatLocale, e.locale, e.monthNameFormat)), C = ee(null), { checkMinMaxRange: L } = gt(e), {
    selectYear: N,
    groupedYears: Y,
    showYearPicker: z,
    toggleYearPicker: F,
    handleYearSelect: Z,
    handleYear: h,
    isDisabled: ie
  } = Yn({
    modelValue: b,
    multiCalendars: r,
    highlight: o,
    calendars: D,
    year: P,
    propDates: O,
    month: V,
    filters: y,
    props: e,
    emit: t
  });
  ze(() => {
    e.startDate && (b.value && e.focusStartDate || !b.value) && N(pe(K(e.startDate)), 0);
  });
  const oe = (k) => k ? { month: he(k), year: pe(k) } : { month: null, year: null }, re = () => b.value ? Array.isArray(b.value) ? b.value.map((k) => oe(k)) : oe(b.value) : oe(), _ = (k, R) => {
    const de = D.value[k], d = re();
    return Array.isArray(d) ? d.some((le) => le.year === (de == null ? void 0 : de.year) && le.month === R) : (de == null ? void 0 : de.year) === d.year && R === d.month;
  }, H = (k, R, de) => {
    var le, l;
    const d = re();
    return Array.isArray(d) ? P.value(R) === ((le = d[de]) == null ? void 0 : le.year) && k === ((l = d[de]) == null ? void 0 : l.month) : !1;
  }, te = (k, R) => {
    if (v.value.enabled) {
      const de = re();
      if (Array.isArray(b.value) && Array.isArray(de)) {
        const d = H(k, R, 0) || H(k, R, 1), le = ut(Ze(K()), k, P.value(R));
        return ra(b.value, C.value, le) && !d;
      }
      return !1;
    }
    return !1;
  }, E = Q(() => (k) => Rt(W.value, (R) => {
    var S;
    const de = _(k, R.value), d = Ht(
      R.value,
      Dn(P.value(k), O.value.minDate),
      $n(P.value(k), O.value.maxDate)
    ) || bl(O.value.disabledDates, P.value(k)).includes(R.value) || ((S = y.value.months) == null ? void 0 : S.includes(R.value)), le = te(R.value, k), l = Rn(o.value, R.value, P.value(k));
    return { active: de, disabled: d, isBetween: le, highlighted: l };
  })), c = (k, R) => ut(Ze(K()), k, P.value(R)), A = (k, R) => {
    const de = b.value ? b.value : Ze(/* @__PURE__ */ new Date());
    b.value = ut(de, k, P.value(R)), t("auto-apply"), t("update-flow-step");
  }, p = (k, R) => {
    const de = c(k, R);
    v.value.fixedEnd || v.value.fixedStart ? b.value = Bn(de, b, t, v) : b.value ? L(de, b.value) && (b.value = Ga(b, c(k, R), t)) : b.value = [c(k, R)], et().then(() => {
      ia(b.value, t, e.autoApply, e.modelAuto);
    });
  }, X = (k, R) => {
    ja(c(k, R), b, T.value.limit), t("auto-apply", !0);
  }, I = (k, R) => (D.value[R].month = k, U(R, D.value[R].year, k), T.value.enabled ? X(k, R) : v.value.enabled ? p(k, R) : A(k, R)), m = (k, R) => {
    N(k, R), U(R, k, null);
  }, U = (k, R, de) => {
    let d = de;
    if (!d && d !== 0) {
      const le = re();
      d = Array.isArray(le) ? le[k].month : le.month;
    }
    t("update-month-year", { instance: k, year: R, month: d });
  };
  return {
    groupedMonths: E,
    groupedYears: Y,
    year: P,
    isDisabled: ie,
    defaultedMultiCalendars: r,
    defaultedAriaLabels: n,
    defaultedTransitions: a,
    defaultedConfig: f,
    showYearPicker: z,
    modelValue: b,
    presetDate: (k, R) => {
      On({
        value: k,
        modelValue: b,
        range: v.value.enabled,
        timezone: R ? void 0 : B.value.timezone
      }), t("auto-apply");
    },
    setHoverDate: (k, R) => {
      C.value = c(k, R);
    },
    selectMonth: I,
    selectYear: m,
    toggleYearPicker: F,
    handleYearSelect: Z,
    handleYear: h,
    getModelMonthYear: re
  };
}, rr = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "MonthPicker",
  props: {
    ...tt
  },
  emits: [
    "update:internal-model-value",
    "overlay-closed",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year",
    "update-flow-step",
    "mount",
    "invalid-fixed-range"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = Dt(), f = Ge(a, "yearMode"), v = e;
    ze(() => {
      v.shadow || n("mount", null);
    });
    const {
      groupedMonths: o,
      groupedYears: O,
      year: B,
      isDisabled: y,
      defaultedMultiCalendars: T,
      defaultedConfig: b,
      showYearPicker: P,
      modelValue: V,
      presetDate: D,
      setHoverDate: W,
      selectMonth: C,
      selectYear: L,
      toggleYearPicker: N,
      handleYearSelect: Y,
      handleYear: z,
      getModelMonthYear: F
    } = lr(v, n);
    return t({ getSidebarProps: () => ({
      modelValue: V,
      year: B,
      getModelMonthYear: F,
      selectMonth: C,
      selectYear: L,
      handleYear: z
    }), presetDate: D, toggleYearPicker: (h) => N(0, h) }), (h, ie) => (M(), we(ua, {
      "multi-calendars": i(T).count,
      collapse: h.collapse,
      stretch: ""
    }, {
      default: ye(({ instance: oe }) => [
        h.$slots["top-extra"] ? se(h.$slots, "top-extra", {
          key: 0,
          value: h.internalModelValue
        }) : q("", !0),
        h.$slots["month-year"] ? se(h.$slots, "month-year", Ye(Ve({ key: 1 }, {
          year: i(B),
          months: i(o)(oe),
          years: i(O)(oe),
          selectMonth: i(C),
          selectYear: i(L),
          instance: oe
        }))) : (M(), we(jt, {
          key: 2,
          items: i(o)(oe),
          "arrow-navigation": h.arrowNavigation,
          "is-last": h.autoApply && !i(b).keepActionRow,
          "esc-close": h.escClose,
          height: i(b).modeHeight,
          config: h.config,
          "no-overlay-focus": !!(h.noOverlayFocus || h.textInput),
          "use-relative": "",
          type: "month",
          onSelected: (re) => i(C)(re, oe),
          onHoverValue: (re) => i(W)(re, oe)
        }, He({
          header: ye(() => [
            Xe(_n, Ve(h.$props, {
              items: i(O)(oe),
              instance: oe,
              "show-year-picker": i(P)[oe],
              year: i(B)(oe),
              "is-disabled": (re) => i(y)(oe, re),
              onHandleYear: (re) => i(z)(oe, re),
              onYearSelect: (re) => i(Y)(re, oe),
              onToggleYearPicker: (re) => i(N)(oe, re == null ? void 0 : re.flow, re == null ? void 0 : re.show)
            }), He({ _: 2 }, [
              Pe(i(f), (re, _) => ({
                name: re,
                fn: ye((H) => [
                  se(h.$slots, re, Ye(We(H)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          _: 2
        }, [
          h.$slots["month-overlay-value"] ? {
            name: "item",
            fn: ye(({ item: re }) => [
              se(h.$slots, "month-overlay-value", {
                text: re.text,
                value: re.value
              })
            ]),
            key: "0"
          } : void 0
        ]), 1032, ["items", "arrow-navigation", "is-last", "esc-close", "height", "config", "no-overlay-focus", "onSelected", "onHoverValue"]))
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), or = (e, t) => {
  const { modelValue: r } = Kt(e, t), n = ee(null), { defaultedHighlight: a, defaultedMultiDates: f, defaultedFilters: v, defaultedRange: o, propDates: O } = Re(e), B = ee();
  ze(() => {
    e.startDate && (r.value && e.focusStartDate || !r.value) && (B.value = pe(K(e.startDate)));
  });
  const y = (W) => Array.isArray(r.value) ? r.value.some((C) => pe(C) === W) : r.value ? pe(r.value) === W : !1, T = (W) => o.value.enabled && Array.isArray(r.value) ? ra(r.value, n.value, P(W)) : !1, b = Q(() => Rt(Ha(e.yearRange, e.locale, e.reverseYears), (W) => {
    const C = y(W.value), L = Ht(
      W.value,
      Ct(O.value.minDate),
      Ct(O.value.maxDate)
    ) || v.value.years.includes(W.value), N = T(W.value) && !C, Y = Ka(a.value, W.value);
    return { active: C, disabled: L, isBetween: N, highlighted: Y };
  })), P = (W) => nt(Ze(/* @__PURE__ */ new Date()), W);
  return {
    groupedYears: b,
    modelValue: r,
    focusYear: B,
    setHoverValue: (W) => {
      n.value = nt(Ze(/* @__PURE__ */ new Date()), W);
    },
    selectYear: (W) => {
      var C;
      if (t("update-month-year", { instance: 0, year: W }), f.value.enabled)
        return r.value ? Array.isArray(r.value) && (((C = r.value) == null ? void 0 : C.map((N) => pe(N))).includes(W) ? r.value = r.value.filter((N) => pe(N) !== W) : r.value.push(nt(Qe(K()), W))) : r.value = [nt(Qe(K()), W)], t("auto-apply", !0);
      o.value.enabled ? (r.value = Ga(r, P(W), t), et().then(() => {
        ia(r.value, t, e.autoApply, e.modelAuto);
      })) : (r.value = P(W), t("auto-apply"));
    }
  };
}, sr = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "YearPicker",
  props: {
    ...tt
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { groupedYears: f, modelValue: v, focusYear: o, selectYear: O, setHoverValue: B } = or(a, n), { defaultedConfig: y } = Re(a);
    return t({ getSidebarProps: () => ({
      modelValue: v,
      selectYear: O
    }) }), (b, P) => (M(), j("div", null, [
      b.$slots["top-extra"] ? se(b.$slots, "top-extra", {
        key: 0,
        value: b.internalModelValue
      }) : q("", !0),
      b.$slots["month-year"] ? se(b.$slots, "month-year", Ye(Ve({ key: 1 }, {
        years: i(f),
        selectYear: i(O)
      }))) : (M(), we(jt, {
        key: 2,
        items: i(f),
        "is-last": b.autoApply && !i(y).keepActionRow,
        height: i(y).modeHeight,
        config: b.config,
        "no-overlay-focus": !!(b.noOverlayFocus || b.textInput),
        "focus-value": i(o),
        type: "year",
        "use-relative": "",
        onSelected: i(O),
        onHoverValue: i(B)
      }, He({ _: 2 }, [
        b.$slots["year-overlay-value"] ? {
          name: "item",
          fn: ye(({ item: V }) => [
            se(b.$slots, "year-overlay-value", {
              text: V.text,
              value: V.value
            })
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["items", "is-last", "height", "config", "no-overlay-focus", "focus-value", "onSelected", "onHoverValue"]))
    ]));
  }
}), ur = {
  key: 0,
  class: "dp__time_input"
}, ir = ["data-test", "aria-label", "onKeydown", "onClick"], dr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), cr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), fr = ["aria-label", "disabled", "data-test", "onKeydown", "onClick"], vr = ["data-test", "aria-label", "onKeydown", "onClick"], mr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), pr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), gr = { key: 0 }, yr = ["aria-label", "onKeydown"], hr = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: { type: Function, default: () => !1 },
    ...tt
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { setTimePickerElements: f, setTimePickerBackRef: v } = pt(), { defaultedAriaLabels: o, defaultedTransitions: O, defaultedFilters: B, defaultedConfig: y, defaultedRange: T } = Re(a), { transitionName: b, showTransition: P } = Ut(O), V = zt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), D = ee("AM"), W = ee(null), C = ee([]);
    ze(() => {
      n("mounted");
    });
    const L = (l) => Ae(/* @__PURE__ */ new Date(), {
      hours: l.hours,
      minutes: l.minutes,
      seconds: a.enableSeconds ? l.seconds : 0,
      milliseconds: 0
    }), N = Q(
      () => (l) => E(l, a[l]) || z(l, a[l])
    ), Y = Q(() => ({ hours: a.hours, minutes: a.minutes, seconds: a.seconds })), z = (l, S) => T.value.enabled && !T.value.disableTimeRangeValidation ? !a.validateTime(l, S) : !1, F = (l, S) => {
      if (T.value.enabled && !T.value.disableTimeRangeValidation) {
        const x = S ? +a[`${l}Increment`] : -+a[`${l}Increment`], J = a[l] + x;
        return !a.validateTime(l, J);
      }
      return !1;
    }, Z = Q(() => (l) => !I(+a[l] + +a[`${l}Increment`], l) || F(l, !0)), h = Q(() => (l) => !I(+a[l] - +a[`${l}Increment`], l) || F(l, !1)), ie = (l, S) => gn(Ae(K(), l), S), oe = (l, S) => qn(Ae(K(), l), S), re = Q(
      () => ({
        dp__time_col: !0,
        dp__time_col_block: !a.timePickerInline,
        dp__time_col_reg_block: !a.enableSeconds && a.is24 && !a.timePickerInline,
        dp__time_col_reg_inline: !a.enableSeconds && a.is24 && a.timePickerInline,
        dp__time_col_reg_with_button: !a.enableSeconds && !a.is24,
        dp__time_col_sec: a.enableSeconds && a.is24,
        dp__time_col_sec_with_button: a.enableSeconds && !a.is24
      })
    ), _ = Q(() => {
      const l = [{ type: "hours" }];
      return a.enableMinutes && l.push({ type: "", separator: !0 }, {
        type: "minutes"
      }), a.enableSeconds && l.push({ type: "", separator: !0 }, {
        type: "seconds"
      }), l;
    }), H = Q(() => _.value.filter((l) => !l.separator)), te = Q(() => (l) => {
      if (l === "hours") {
        const S = k(+a.hours);
        return { text: S < 10 ? `0${S}` : `${S}`, value: S };
      }
      return { text: a[l] < 10 ? `0${a[l]}` : `${a[l]}`, value: a[l] };
    }), E = (l, S) => {
      var J;
      if (!a.disabledTimesConfig)
        return !1;
      const x = a.disabledTimesConfig(a.order, l === "hours" ? S : void 0);
      return x[l] ? !!((J = x[l]) != null && J.includes(S)) : !0;
    }, c = (l, S) => S !== "hours" || D.value === "AM" ? l : l + 12, A = (l) => {
      const S = a.is24 ? 24 : 12, x = l === "hours" ? S : 60, J = +a[`${l}GridIncrement`], ae = l === "hours" && !a.is24 ? J : 0, g = [];
      for (let $ = ae; $ < x; $ += J)
        g.push({ value: a.is24 ? $ : c($, l), text: $ < 10 ? `0${$}` : `${$}` });
      return l === "hours" && !a.is24 && g.push({ value: 0, text: "12" }), Rt(g, ($) => ({ active: !1, disabled: B.value.times[l].includes($.value) || !I($.value, l) || E(l, $.value) || z(l, $.value) }));
    }, p = (l) => l >= 0 ? l : 59, X = (l) => l >= 0 ? l : 23, I = (l, S) => {
      const x = a.minTime ? L(wa(a.minTime)) : null, J = a.maxTime ? L(wa(a.maxTime)) : null, ae = L(
        wa(
          Y.value,
          S,
          S === "minutes" || S === "seconds" ? p(l) : X(l)
        )
      );
      return x && J ? (Wt(ae, J) || Tt(ae, J)) && (St(ae, x) || Tt(ae, x)) : x ? St(ae, x) || Tt(ae, x) : J ? Wt(ae, J) || Tt(ae, J) : !0;
    }, m = (l) => a[`no${l[0].toUpperCase() + l.slice(1)}Overlay`], U = (l) => {
      m(l) || (V[l] = !V[l], V[l] || n("overlay-closed"));
    }, ne = (l) => l === "hours" ? xe : l === "minutes" ? rt : Pt, u = (l, S = !0) => {
      const x = S ? ie : oe, J = S ? +a[`${l}Increment`] : -+a[`${l}Increment`];
      I(+a[l] + J, l) && n(
        `update:${l}`,
        ne(l)(x({ [l]: +a[l] }, { [l]: +a[`${l}Increment`] }))
      );
    }, k = (l) => a.is24 ? l : (l >= 12 ? D.value = "PM" : D.value = "AM", ol(l)), R = () => {
      D.value === "PM" ? (D.value = "AM", n("update:hours", a.hours - 12)) : (D.value = "PM", n("update:hours", a.hours + 12)), n("am-pm-change", D.value);
    }, de = (l) => {
      V[l] = !0;
    }, d = (l, S, x) => {
      if (l && a.arrowNavigation) {
        Array.isArray(C.value[S]) ? C.value[S][x] = l : C.value[S] = [l];
        const J = C.value.reduce(
          (ae, g) => g.map(($, ge) => [...ae[ge] || [], g[ge]]),
          []
        );
        v(a.closeTimePickerBtn), W.value && (J[1] = J[1].concat(W.value)), f(J, a.order);
      }
    }, le = (l, S) => (U(l), n(`update:${l}`, S));
    return t({ openChildCmp: de }), (l, S) => {
      var x;
      return l.disabled ? q("", !0) : (M(), j("div", ur, [
        (M(!0), j(ke, null, Pe(_.value, (J, ae) => {
          var g, $, ge;
          return M(), j("div", {
            key: ae,
            class: Me(re.value)
          }, [
            J.separator ? (M(), j(ke, { key: 0 }, [
              it(" : ")
            ], 64)) : (M(), j(ke, { key: 1 }, [
              ce("button", {
                ref_for: !0,
                ref: (me) => d(me, ae, 0),
                type: "button",
                class: Me({
                  dp__btn: !0,
                  dp__inc_dec_button: !l.timePickerInline,
                  dp__inc_dec_button_inline: l.timePickerInline,
                  dp__tp_inline_btn_top: l.timePickerInline,
                  dp__inc_dec_button_disabled: Z.value(J.type)
                }),
                "data-test": `${J.type}-time-inc-btn-${a.order}`,
                "aria-label": (g = i(o)) == null ? void 0 : g.incrementValue(J.type),
                tabindex: "0",
                onKeydown: [
                  fe($e((me) => u(J.type), ["prevent"]), ["enter"]),
                  fe($e((me) => u(J.type), ["prevent"]), ["space"])
                ],
                onClick: (me) => u(J.type)
              }, [
                a.timePickerInline ? (M(), j(ke, { key: 1 }, [
                  dr,
                  cr
                ], 64)) : (M(), j(ke, { key: 0 }, [
                  l.$slots["arrow-up"] ? se(l.$slots, "arrow-up", { key: 0 }) : q("", !0),
                  l.$slots["arrow-up"] ? q("", !0) : (M(), we(i(Va), { key: 1 }))
                ], 64))
              ], 42, ir),
              ce("button", {
                ref_for: !0,
                ref: (me) => d(me, ae, 1),
                type: "button",
                "aria-label": ($ = i(o)) == null ? void 0 : $.openTpOverlay(J.type),
                class: Me({
                  dp__time_display: !0,
                  dp__time_display_block: !l.timePickerInline,
                  dp__time_display_inline: l.timePickerInline,
                  "dp--time-invalid": N.value(J.type),
                  "dp--time-overlay-btn": !N.value(J.type)
                }),
                disabled: m(J.type),
                tabindex: "0",
                "data-test": `${J.type}-toggle-overlay-btn-${a.order}`,
                onKeydown: [
                  fe($e((me) => U(J.type), ["prevent"]), ["enter"]),
                  fe($e((me) => U(J.type), ["prevent"]), ["space"])
                ],
                onClick: (me) => U(J.type)
              }, [
                l.$slots[J.type] ? se(l.$slots, J.type, {
                  key: 0,
                  text: te.value(J.type).text,
                  value: te.value(J.type).value
                }) : q("", !0),
                l.$slots[J.type] ? q("", !0) : (M(), j(ke, { key: 1 }, [
                  it(Le(te.value(J.type).text), 1)
                ], 64))
              ], 42, fr),
              ce("button", {
                ref_for: !0,
                ref: (me) => d(me, ae, 2),
                type: "button",
                class: Me({
                  dp__btn: !0,
                  dp__inc_dec_button: !l.timePickerInline,
                  dp__inc_dec_button_inline: l.timePickerInline,
                  dp__tp_inline_btn_bottom: l.timePickerInline,
                  dp__inc_dec_button_disabled: h.value(J.type)
                }),
                "data-test": `${J.type}-time-dec-btn-${a.order}`,
                "aria-label": (ge = i(o)) == null ? void 0 : ge.decrementValue(J.type),
                tabindex: "0",
                onKeydown: [
                  fe($e((me) => u(J.type, !1), ["prevent"]), ["enter"]),
                  fe($e((me) => u(J.type, !1), ["prevent"]), ["space"])
                ],
                onClick: (me) => u(J.type, !1)
              }, [
                a.timePickerInline ? (M(), j(ke, { key: 1 }, [
                  mr,
                  pr
                ], 64)) : (M(), j(ke, { key: 0 }, [
                  l.$slots["arrow-down"] ? se(l.$slots, "arrow-down", { key: 0 }) : q("", !0),
                  l.$slots["arrow-down"] ? q("", !0) : (M(), we(i(Wa), { key: 1 }))
                ], 64))
              ], 42, vr)
            ], 64))
          ], 2);
        }), 128)),
        l.is24 ? q("", !0) : (M(), j("div", gr, [
          l.$slots["am-pm-button"] ? se(l.$slots, "am-pm-button", {
            key: 0,
            toggle: R,
            value: D.value
          }) : q("", !0),
          l.$slots["am-pm-button"] ? q("", !0) : (M(), j("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: W,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (x = i(o)) == null ? void 0 : x.amPmButton,
            tabindex: "0",
            onClick: R,
            onKeydown: [
              fe($e(R, ["prevent"]), ["enter"]),
              fe($e(R, ["prevent"]), ["space"])
            ]
          }, Le(D.value), 41, yr))
        ])),
        (M(!0), j(ke, null, Pe(H.value, (J, ae) => (M(), we(_t, {
          key: ae,
          name: i(b)(V[J.type]),
          css: i(P)
        }, {
          default: ye(() => [
            V[J.type] ? (M(), we(jt, {
              key: 0,
              items: A(J.type),
              "is-last": l.autoApply && !i(y).keepActionRow,
              "esc-close": l.escClose,
              type: J.type,
              "text-input": l.textInput,
              config: l.config,
              "arrow-navigation": l.arrowNavigation,
              "aria-labels": l.ariaLabels,
              onSelected: (g) => le(J.type, g),
              onToggle: (g) => U(J.type),
              onResetFlow: S[0] || (S[0] = (g) => l.$emit("reset-flow"))
            }, He({
              "button-icon": ye(() => [
                l.$slots["clock-icon"] ? se(l.$slots, "clock-icon", { key: 0 }) : q("", !0),
                l.$slots["clock-icon"] ? q("", !0) : (M(), we(la(l.timePickerInline ? i(Ot) : i(La)), { key: 1 }))
              ]),
              _: 2
            }, [
              l.$slots[`${J.type}-overlay-value`] ? {
                name: "item",
                fn: ye(({ item: g }) => [
                  se(l.$slots, `${J.type}-overlay-value`, {
                    text: g.text,
                    value: g.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "is-last", "esc-close", "type", "text-input", "config", "arrow-navigation", "aria-labels", "onSelected", "onToggle"])) : q("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), br = { class: "dp--tp-wrap" }, kr = ["aria-label", "tabindex"], wr = ["tabindex"], Mr = ["aria-label"], In = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: {
      type: Function,
      default: () => !1
    },
    ...tt
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { buildMatrix: f, setTimePicker: v } = pt(), o = Dt(), { defaultedTransitions: O, defaultedAriaLabels: B, defaultedTextInput: y, defaultedConfig: T, defaultedRange: b } = Re(a), { transitionName: P, showTransition: V } = Ut(O), { hideNavigationButtons: D } = oa(), W = ee(null), C = ee(null), L = ee([]), N = ee(null);
    ze(() => {
      n("mount"), !a.timePicker && a.arrowNavigation ? f([Ie(W.value)], "time") : v(!0, a.timePicker);
    });
    const Y = Q(() => b.value.enabled && a.modelAuto ? kn(a.internalModelValue) : !0), z = ee(!1), F = (c) => ({
      hours: Array.isArray(a.hours) ? a.hours[c] : a.hours,
      minutes: Array.isArray(a.minutes) ? a.minutes[c] : a.minutes,
      seconds: Array.isArray(a.seconds) ? a.seconds[c] : a.seconds
    }), Z = Q(() => {
      const c = [];
      if (b.value.enabled)
        for (let A = 0; A < 2; A++)
          c.push(F(A));
      else
        c.push(F(0));
      return c;
    }), h = (c, A = !1, p = "") => {
      A || n("reset-flow"), z.value = c, n(c ? "overlay-opened" : "overlay-closed"), a.arrowNavigation && v(c), et(() => {
        p !== "" && L.value[0] && L.value[0].openChildCmp(p);
      });
    }, ie = Q(() => ({
      dp__btn: !0,
      dp__button: !0,
      dp__button_bottom: a.autoApply && !T.value.keepActionRow
    })), oe = Ge(o, "timePicker"), re = (c, A, p) => b.value.enabled ? A === 0 ? [c, Z.value[1][p]] : [Z.value[0][p], c] : c, _ = (c) => {
      n("update:hours", c);
    }, H = (c) => {
      n("update:minutes", c);
    }, te = (c) => {
      n("update:seconds", c);
    }, E = () => {
      if (N.value && !y.value.enabled && !a.noOverlayFocus) {
        const c = wn(N.value);
        c && c.focus({ preventScroll: !0 });
      }
    };
    return t({ toggleTimePicker: h }), (c, A) => {
      var p;
      return M(), j("div", br, [
        !c.timePicker && !c.timePickerInline ? xt((M(), j("button", {
          key: 0,
          ref_key: "openTimePickerBtn",
          ref: W,
          type: "button",
          class: Me(ie.value),
          "aria-label": (p = i(B)) == null ? void 0 : p.openTimePicker,
          tabindex: c.noOverlayFocus ? void 0 : 0,
          "data-test": "open-time-picker-btn",
          onKeydown: [
            A[0] || (A[0] = fe((X) => h(!0), ["enter"])),
            A[1] || (A[1] = fe((X) => h(!0), ["space"]))
          ],
          onClick: A[2] || (A[2] = (X) => h(!0))
        }, [
          c.$slots["clock-icon"] ? se(c.$slots, "clock-icon", { key: 0 }) : q("", !0),
          c.$slots["clock-icon"] ? q("", !0) : (M(), we(i(La), { key: 1 }))
        ], 42, kr)), [
          [ea, !i(D)(c.hideNavigation, "time")]
        ]) : q("", !0),
        Xe(_t, {
          name: i(P)(z.value),
          css: i(V) && !c.timePickerInline
        }, {
          default: ye(() => {
            var X;
            return [
              z.value || c.timePicker || c.timePickerInline ? (M(), j("div", {
                key: 0,
                ref_key: "overlayRef",
                ref: N,
                class: Me({
                  dp__overlay: !c.timePickerInline,
                  "dp--overlay-absolute": !a.timePicker && !c.timePickerInline,
                  "dp--overlay-relative": a.timePicker
                }),
                style: qe(c.timePicker ? { height: `${i(T).modeHeight}px` } : void 0),
                tabindex: c.timePickerInline ? void 0 : 0
              }, [
                ce("div", {
                  class: Me(
                    c.timePickerInline ? "dp__time_picker_inline_container" : "dp__overlay_container dp__container_flex dp__time_picker_overlay_container"
                  ),
                  style: { display: "flex" }
                }, [
                  c.$slots["time-picker-overlay"] ? se(c.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: _,
                    setMinutes: H,
                    setSeconds: te
                  }) : q("", !0),
                  c.$slots["time-picker-overlay"] ? q("", !0) : (M(), j("div", {
                    key: 1,
                    class: Me(c.timePickerInline ? "dp__flex" : "dp__overlay_row dp__flex_row")
                  }, [
                    (M(!0), j(ke, null, Pe(Z.value, (I, m) => xt((M(), we(hr, Ve({ key: m }, {
                      ...c.$props,
                      order: m,
                      hours: I.hours,
                      minutes: I.minutes,
                      seconds: I.seconds,
                      closeTimePickerBtn: C.value,
                      disabledTimesConfig: e.disabledTimesConfig,
                      disabled: m === 0 ? c.fixedStart : c.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: L,
                      "validate-time": (U, ne) => e.validateTime(U, re(ne, m, U)),
                      "onUpdate:hours": (U) => _(re(U, m, "hours")),
                      "onUpdate:minutes": (U) => H(re(U, m, "minutes")),
                      "onUpdate:seconds": (U) => te(re(U, m, "seconds")),
                      onMounted: E,
                      onOverlayClosed: E,
                      onAmPmChange: A[3] || (A[3] = (U) => c.$emit("am-pm-change", U))
                    }), He({ _: 2 }, [
                      Pe(i(oe), (U, ne) => ({
                        name: U,
                        fn: ye((u) => [
                          se(c.$slots, U, Ye(We(u)))
                        ])
                      }))
                    ]), 1040, ["validate-time", "onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [ea, m === 0 ? !0 : Y.value]
                    ])), 128))
                  ], 2)),
                  !c.timePicker && !c.timePickerInline ? xt((M(), j("button", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: C,
                    type: "button",
                    class: Me(ie.value),
                    "aria-label": (X = i(B)) == null ? void 0 : X.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      A[4] || (A[4] = fe((I) => h(!1), ["enter"])),
                      A[5] || (A[5] = fe((I) => h(!1), ["space"]))
                    ],
                    onClick: A[6] || (A[6] = (I) => h(!1))
                  }, [
                    c.$slots["calendar-icon"] ? se(c.$slots, "calendar-icon", { key: 0 }) : q("", !0),
                    c.$slots["calendar-icon"] ? q("", !0) : (M(), we(i(Ot), { key: 1 }))
                  ], 42, Mr)), [
                    [ea, !i(D)(c.hideNavigation, "time")]
                  ]) : q("", !0)
                ], 2)
              ], 14, wr)) : q("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Nn = (e, t, r, n) => {
  const { defaultedRange: a } = Re(e), f = (N, Y) => Array.isArray(t[N]) ? t[N][Y] : t[N], v = (N) => e.enableSeconds ? Array.isArray(t.seconds) ? t.seconds[N] : t.seconds : 0, o = (N, Y) => N ? Y !== void 0 ? vt(N, f("hours", Y), f("minutes", Y), v(Y)) : vt(N, t.hours, t.minutes, v()) : Ya(K(), v(Y)), O = (N, Y) => {
    t[N] = Y;
  }, B = Q(() => e.modelAuto && a.value.enabled ? Array.isArray(r.value) ? r.value.length > 1 : !1 : a.value.enabled), y = (N, Y) => {
    const z = Object.fromEntries(
      Object.keys(t).map((F) => F === N ? [F, Y] : [F, t[F]].slice())
    );
    if (B.value && !a.value.disableTimeRangeValidation) {
      const F = (h) => r.value ? vt(
        r.value[h],
        z.hours[h],
        z.minutes[h],
        z.seconds[h]
      ) : null, Z = (h) => Ia(r.value[h], 0);
      return !(be(F(0), F(1)) && (St(F(0), Z(1)) || Wt(F(1), Z(0))));
    }
    return !0;
  }, T = (N, Y) => {
    y(N, Y) && (O(N, Y), n && n());
  }, b = (N) => {
    T("hours", N);
  }, P = (N) => {
    T("minutes", N);
  }, V = (N) => {
    T("seconds", N);
  }, D = (N, Y, z, F) => {
    Y && b(N), !Y && !z && P(N), z && V(N), r.value && F(r.value);
  }, W = (N) => {
    if (N) {
      const Y = Array.isArray(N), z = Y ? [+N[0].hours, +N[1].hours] : +N.hours, F = Y ? [+N[0].minutes, +N[1].minutes] : +N.minutes, Z = Y ? [+N[0].seconds, +N[1].seconds] : +N.seconds;
      O("hours", z), O("minutes", F), e.enableSeconds && O("seconds", Z);
    }
  }, C = (N, Y) => {
    const z = {
      hours: Array.isArray(t.hours) ? t.hours[N] : t.hours,
      disabledArr: []
    };
    return (Y || Y === 0) && (z.hours = Y), Array.isArray(e.disabledTimes) && (z.disabledArr = a.value.enabled && Array.isArray(e.disabledTimes[N]) ? e.disabledTimes[N] : e.disabledTimes), z;
  }, L = Q(() => (N, Y) => {
    var z;
    if (Array.isArray(e.disabledTimes)) {
      const { disabledArr: F, hours: Z } = C(N, Y), h = F.filter((ie) => +ie.hours === Z);
      return ((z = h[0]) == null ? void 0 : z.minutes) === "*" ? { hours: [Z], minutes: void 0, seconds: void 0 } : {
        hours: [],
        minutes: (h == null ? void 0 : h.map((ie) => +ie.minutes)) ?? [],
        seconds: (h == null ? void 0 : h.map((ie) => ie.seconds ? +ie.seconds : void 0)) ?? []
      };
    }
    return { hours: [], minutes: [], seconds: [] };
  });
  return {
    setTime: O,
    updateHours: b,
    updateMinutes: P,
    updateSeconds: V,
    getSetDateTime: o,
    updateTimeValues: D,
    getSecondsValue: v,
    assignStartTime: W,
    validateTime: y,
    disabledTimesConfig: L
  };
}, Dr = (e, t) => {
  const { modelValue: r, time: n } = Kt(e, t), { defaultedStartTime: a, defaultedRange: f } = Re(e), { updateTimeValues: v, getSetDateTime: o, setTime: O, assignStartTime: B, disabledTimesConfig: y, validateTime: T } = Nn(e, n, r), b = (Y) => {
    const { hours: z, minutes: F, seconds: Z } = Y;
    return { hours: +z, minutes: +F, seconds: Z ? +Z : 0 };
  }, P = () => {
    if (e.startTime) {
      if (Array.isArray(e.startTime)) {
        const z = b(e.startTime[0]), F = b(e.startTime[1]);
        return [Ae(K(), z), Ae(K(), F)];
      }
      const Y = b(e.startTime);
      return Ae(K(), Y);
    }
    return f.value.enabled ? [null, null] : null;
  }, V = () => {
    if (f.value.enabled) {
      const [Y, z] = P();
      r.value = [o(Y, 0), o(z, 1)];
    } else
      r.value = o(P());
  }, D = (Y) => Array.isArray(Y) ? [wt(K(Y[0])), wt(K(Y[1]))] : [wt(Y ?? K())], W = (Y, z, F) => {
    O("hours", Y), O("minutes", z), O("seconds", e.enableSeconds ? F : 0);
  }, C = () => {
    const [Y, z] = D(r.value);
    return f.value.enabled ? W(
      [Y.hours, z.hours],
      [Y.minutes, z.minutes],
      [Y.seconds, z.seconds]
    ) : W(Y.hours, Y.minutes, Y.seconds);
  };
  ze(() => {
    if (!e.shadow)
      return B(a.value), r.value ? C() : V();
  });
  const L = () => {
    Array.isArray(r.value) ? r.value = r.value.map((Y, z) => Y && o(Y, z)) : r.value = o(r.value), t("time-update");
  };
  return {
    modelValue: r,
    time: n,
    disabledTimesConfig: y,
    updateTime: (Y, z = !0, F = !1) => {
      v(Y, z, F, L);
    },
    validateTime: T
  };
}, $r = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePickerSolo",
  props: {
    ...tt
  },
  emits: ["update:internal-model-value", "time-update", "am-pm-change"],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = Dt(), v = Ge(f, "timePicker"), { time: o, modelValue: O, disabledTimesConfig: B, updateTime: y, validateTime: T } = Dr(a, n);
    return t({ getSidebarProps: () => ({
      modelValue: O,
      time: o,
      updateTime: y
    }) }), (P, V) => (M(), we(ua, {
      "multi-calendars": 0,
      stretch: ""
    }, {
      default: ye(() => [
        Xe(In, Ve(P.$props, {
          hours: i(o).hours,
          minutes: i(o).minutes,
          seconds: i(o).seconds,
          "internal-model-value": P.internalModelValue,
          "disabled-times-config": i(B),
          "validate-time": i(T),
          "onUpdate:hours": V[0] || (V[0] = (D) => i(y)(D)),
          "onUpdate:minutes": V[1] || (V[1] = (D) => i(y)(D, !1)),
          "onUpdate:seconds": V[2] || (V[2] = (D) => i(y)(D, !1, !0)),
          onAmPmChange: V[3] || (V[3] = (D) => P.$emit("am-pm-change", D))
        }), He({ _: 2 }, [
          Pe(i(v), (D, W) => ({
            name: D,
            fn: ye((C) => [
              se(P.$slots, D, Ye(We(C)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"])
      ]),
      _: 3
    }));
  }
}), Ar = { class: "dp--header-wrap" }, Tr = {
  key: 0,
  class: "dp__month_year_wrap"
}, Sr = { key: 0 }, Pr = { class: "dp__month_year_wrap" }, Rr = ["aria-label", "data-test", "onClick", "onKeydown"], Cr = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "DpHeader",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    ...tt
  },
  emits: ["update-month-year", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, {
      defaultedTransitions: f,
      defaultedAriaLabels: v,
      defaultedMultiCalendars: o,
      defaultedFilters: O,
      defaultedConfig: B,
      defaultedHighlight: y,
      propDates: T
    } = Re(a), { transitionName: b, showTransition: P } = Ut(f), { buildMatrix: V } = pt(), { handleMonthYearChange: D, isDisabled: W, updateMonthYear: C } = Fl(a, n), { showLeftIcon: L, showRightIcon: N } = oa(), Y = ee(!1), z = ee(!1), F = ee([null, null, null, null]);
    ze(() => {
      n("mount");
    });
    const Z = (m) => ({
      get: () => a[m],
      set: (U) => {
        const ne = m === Je.month ? Je.year : Je.month;
        n("update-month-year", { [m]: U, [ne]: a[ne] }), m === Je.month ? E(!0) : c(!0);
      }
    }), h = Q(Z(Je.month)), ie = Q(Z(Je.year)), oe = Q(() => (m) => ({
      month: a.month,
      year: a.year,
      items: m === Je.month ? a.months : a.years,
      instance: a.instance,
      updateMonthYear: C,
      toggle: m === Je.month ? E : c
    })), re = Q(() => {
      const m = a.months.find((U) => U.value === a.month);
      return m || { text: "", value: 0 };
    }), _ = Q(() => Rt(a.months, (m) => {
      const U = a.month === m.value, ne = Ht(
        m.value,
        Dn(a.year, T.value.minDate),
        $n(a.year, T.value.maxDate)
      ) || O.value.months.includes(m.value), u = Rn(y.value, m.value, a.year);
      return { active: U, disabled: ne, highlighted: u };
    })), H = Q(() => Rt(a.years, (m) => {
      const U = a.year === m.value, ne = Ht(
        m.value,
        Ct(T.value.minDate),
        Ct(T.value.maxDate)
      ) || O.value.years.includes(m.value), u = Ka(y.value, m.value);
      return { active: U, disabled: ne, highlighted: u };
    })), te = (m, U) => {
      U !== void 0 ? m.value = U : m.value = !m.value, m.value || n("overlay-closed");
    }, E = (m = !1, U) => {
      A(m), te(Y, U);
    }, c = (m = !1, U) => {
      A(m), te(z, U);
    }, A = (m) => {
      m || n("reset-flow");
    }, p = (m, U) => {
      a.arrowNavigation && (F.value[U] = Ie(m), V(F.value, "monthYear"));
    }, X = Q(() => {
      var m, U;
      return [
        {
          type: Je.month,
          index: 1,
          toggle: E,
          modelValue: h.value,
          updateModelValue: (ne) => h.value = ne,
          text: re.value.text,
          showSelectionGrid: Y.value,
          items: _.value,
          ariaLabel: (m = v.value) == null ? void 0 : m.openMonthsOverlay
        },
        {
          type: Je.year,
          index: 2,
          toggle: c,
          modelValue: ie.value,
          updateModelValue: (ne) => ie.value = ne,
          text: Mn(a.year, a.locale),
          showSelectionGrid: z.value,
          items: H.value,
          ariaLabel: (U = v.value) == null ? void 0 : U.openYearsOverlay
        }
      ];
    }), I = Q(() => a.disableYearSelect ? [X.value[0]] : a.yearFirst ? [...X.value].reverse() : X.value);
    return t({
      toggleMonthPicker: E,
      toggleYearPicker: c,
      handleMonthYearChange: D
    }), (m, U) => {
      var ne, u, k;
      return M(), j("div", Ar, [
        m.$slots["month-year"] ? (M(), j("div", Tr, [
          se(m.$slots, "month-year", Ye(We({ month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: i(C), handleMonthYearChange: i(D), instance: e.instance })))
        ])) : (M(), j(ke, { key: 1 }, [
          m.$slots["top-extra"] ? (M(), j("div", Sr, [
            se(m.$slots, "top-extra", { value: m.internalModelValue })
          ])) : q("", !0),
          ce("div", Pr, [
            i(L)(i(o), e.instance) && !m.vertical ? (M(), we(Ft, {
              key: 0,
              "aria-label": (ne = i(v)) == null ? void 0 : ne.prevMonth,
              disabled: i(W)(!1),
              onActivate: U[0] || (U[0] = (R) => i(D)(!1, !0)),
              onSetRef: U[1] || (U[1] = (R) => p(R, 0))
            }, {
              default: ye(() => [
                m.$slots["arrow-left"] ? se(m.$slots, "arrow-left", { key: 0 }) : q("", !0),
                m.$slots["arrow-left"] ? q("", !0) : (M(), we(i(Ea), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : q("", !0),
            ce("div", {
              class: Me(["dp__month_year_wrap", {
                dp__year_disable_select: m.disableYearSelect
              }])
            }, [
              (M(!0), j(ke, null, Pe(I.value, (R, de) => (M(), j(ke, {
                key: R.type
              }, [
                ce("button", {
                  ref_for: !0,
                  ref: (d) => p(d, de + 1),
                  type: "button",
                  class: "dp__btn dp__month_year_select",
                  tabindex: "0",
                  "aria-label": R.ariaLabel,
                  "data-test": `${R.type}-toggle-overlay-${e.instance}`,
                  onClick: R.toggle,
                  onKeydown: [
                    fe($e(R.toggle, ["prevent"]), ["enter"]),
                    fe($e(R.toggle, ["prevent"]), ["space"])
                  ]
                }, [
                  m.$slots[R.type] ? se(m.$slots, R.type, {
                    key: 0,
                    text: R.text,
                    value: a[R.type]
                  }) : q("", !0),
                  m.$slots[R.type] ? q("", !0) : (M(), j(ke, { key: 1 }, [
                    it(Le(R.text), 1)
                  ], 64))
                ], 40, Rr),
                Xe(_t, {
                  name: i(b)(R.showSelectionGrid),
                  css: i(P)
                }, {
                  default: ye(() => [
                    R.showSelectionGrid ? (M(), we(jt, {
                      key: 0,
                      items: R.items,
                      "arrow-navigation": m.arrowNavigation,
                      "hide-navigation": m.hideNavigation,
                      "is-last": m.autoApply && !i(B).keepActionRow,
                      "skip-button-ref": !1,
                      config: m.config,
                      type: R.type,
                      "header-refs": [],
                      "esc-close": m.escClose,
                      "menu-wrap-ref": m.menuWrapRef,
                      "text-input": m.textInput,
                      "aria-labels": m.ariaLabels,
                      onSelected: R.updateModelValue,
                      onToggle: R.toggle
                    }, He({
                      "button-icon": ye(() => [
                        m.$slots["calendar-icon"] ? se(m.$slots, "calendar-icon", { key: 0 }) : q("", !0),
                        m.$slots["calendar-icon"] ? q("", !0) : (M(), we(i(Ot), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      m.$slots[`${R.type}-overlay-value`] ? {
                        name: "item",
                        fn: ye(({ item: d }) => [
                          se(m.$slots, `${R.type}-overlay-value`, {
                            text: d.text,
                            value: d.value
                          })
                        ]),
                        key: "0"
                      } : void 0,
                      m.$slots[`${R.type}-overlay`] ? {
                        name: "overlay",
                        fn: ye(() => [
                          se(m.$slots, `${R.type}-overlay`, Ye(We(oe.value(R.type))))
                        ]),
                        key: "1"
                      } : void 0,
                      m.$slots[`${R.type}-overlay-header`] ? {
                        name: "header",
                        fn: ye(() => [
                          se(m.$slots, `${R.type}-overlay-header`, {
                            toggle: R.toggle
                          })
                        ]),
                        key: "2"
                      } : void 0
                    ]), 1032, ["items", "arrow-navigation", "hide-navigation", "is-last", "config", "type", "esc-close", "menu-wrap-ref", "text-input", "aria-labels", "onSelected", "onToggle"])) : q("", !0)
                  ]),
                  _: 2
                }, 1032, ["name", "css"])
              ], 64))), 128))
            ], 2),
            i(L)(i(o), e.instance) && m.vertical ? (M(), we(Ft, {
              key: 1,
              "aria-label": (u = i(v)) == null ? void 0 : u.prevMonth,
              disabled: i(W)(!1),
              onActivate: U[2] || (U[2] = (R) => i(D)(!1, !0))
            }, {
              default: ye(() => [
                m.$slots["arrow-up"] ? se(m.$slots, "arrow-up", { key: 0 }) : q("", !0),
                m.$slots["arrow-up"] ? q("", !0) : (M(), we(i(Va), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : q("", !0),
            i(N)(i(o), e.instance) ? (M(), we(Ft, {
              key: 2,
              ref: "rightIcon",
              disabled: i(W)(!0),
              "aria-label": (k = i(v)) == null ? void 0 : k.nextMonth,
              onActivate: U[3] || (U[3] = (R) => i(D)(!0, !0)),
              onSetRef: U[4] || (U[4] = (R) => p(R, m.disableYearSelect ? 2 : 3))
            }, {
              default: ye(() => [
                m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? se(m.$slots, m.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : q("", !0),
                m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? q("", !0) : (M(), we(la(m.vertical ? i(Wa) : i(Fa)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : q("", !0)
          ])
        ], 64))
      ]);
    };
  }
}), _r = ["aria-label"], Or = {
  class: "dp__calendar_header",
  role: "row"
}, Br = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, Yr = ["aria-label"], Ir = /* @__PURE__ */ ce("div", { class: "dp__calendar_header_separator" }, null, -1), Nr = ["aria-label"], Er = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, Fr = { class: "dp__cell_inner" }, Lr = ["id", "aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave", "onMousedown"], Vr = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "DpCalendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...tt
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, { buildMultiLevelMatrix: f } = pt(), {
      defaultedTransitions: v,
      defaultedConfig: o,
      defaultedAriaLabels: O,
      defaultedMultiCalendars: B,
      defaultedWeekNumbers: y,
      defaultedMultiDates: T
    } = Re(a), b = ee(null), P = ee({
      bottom: "",
      left: "",
      transform: ""
    }), V = ee([]), D = ee(null), W = ee(!0), C = ee(""), L = ee({ startX: 0, endX: 0, startY: 0, endY: 0 }), N = ee([]), Y = ee({ left: "50%" }), z = ee(!1), F = Q(() => a.calendar ? a.calendar(a.mappedDates) : a.mappedDates), Z = Q(() => a.dayNames ? Array.isArray(a.dayNames) ? a.dayNames : a.dayNames(a.locale, +a.weekStart) : rl(a.formatLocale, a.locale, +a.weekStart));
    ze(() => {
      n("mount", { cmp: "calendar", refs: V }), o.value.noSwipe || D.value && (D.value.addEventListener("touchstart", X, { passive: !1 }), D.value.addEventListener("touchend", I, { passive: !1 }), D.value.addEventListener("touchmove", m, { passive: !1 })), a.monthChangeOnScroll && D.value && D.value.addEventListener("wheel", u, { passive: !1 });
    });
    const h = (l) => l ? a.vertical ? "vNext" : "next" : a.vertical ? "vPrevious" : "previous", ie = (l, S) => {
      if (a.transitions) {
        const x = Qe(ut(K(), a.month, a.year));
        C.value = Oe(Qe(ut(K(), l, S)), x) ? v.value[h(!0)] : v.value[h(!1)], W.value = !1, et(() => {
          W.value = !0;
        });
      }
    }, oe = Q(
      () => ({
        [a.calendarClassName]: !!a.calendarClassName
      })
    ), re = Q(() => (l) => {
      const S = sl(l);
      return {
        dp__marker_dot: S.type === "dot",
        dp__marker_line: S.type === "line"
      };
    }), _ = Q(() => (l) => be(l, b.value)), H = Q(() => ({
      dp__calendar: !0,
      dp__calendar_next: B.value.count > 0 && a.instance !== 0
    })), te = Q(() => (l) => a.hideOffsetDates ? l.current : !0), E = (l) => lt(l, "yyyy-MM-dd"), c = async (l, S, x) => {
      const J = Ie(V.value[S][x]);
      if (J) {
        const { width: ae, height: g } = J.getBoundingClientRect();
        b.value = l.value;
        let $ = { left: `${ae / 2}px` }, ge = -50;
        if (await et(), N.value[0]) {
          const { left: me, width: Ee } = N.value[0].getBoundingClientRect();
          me < 0 && ($ = { left: "0" }, ge = 0, Y.value.left = `${ae / 2}px`), window.innerWidth < me + Ee && ($ = { right: "0" }, ge = 0, Y.value.left = `${Ee - ae / 2}px`);
        }
        P.value = {
          bottom: `${g}px`,
          ...$,
          transform: `translateX(${ge}%)`
        }, n("tooltip-open", l.marker);
      }
    }, A = async (l, S, x) => {
      var J, ae;
      if (z.value && T.value.enabled && T.value.dragSelect)
        return n("select-date", l);
      n("set-hover-date", l), (ae = (J = l.marker) == null ? void 0 : J.tooltip) != null && ae.length && await c(l, S, x);
    }, p = (l) => {
      b.value && (b.value = null, P.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), n("tooltip-close", l.marker));
    }, X = (l) => {
      L.value.startX = l.changedTouches[0].screenX, L.value.startY = l.changedTouches[0].screenY;
    }, I = (l) => {
      L.value.endX = l.changedTouches[0].screenX, L.value.endY = l.changedTouches[0].screenY, U();
    }, m = (l) => {
      a.vertical && !a.inline && l.preventDefault();
    }, U = () => {
      const l = a.vertical ? "Y" : "X";
      Math.abs(L.value[`start${l}`] - L.value[`end${l}`]) > 10 && n("handle-swipe", L.value[`start${l}`] > L.value[`end${l}`] ? "right" : "left");
    }, ne = (l, S, x) => {
      l && (Array.isArray(V.value[S]) ? V.value[S][x] = l : V.value[S] = [l]), a.arrowNavigation && f(V.value, "calendar");
    }, u = (l) => {
      a.monthChangeOnScroll && (l.preventDefault(), n("handle-scroll", l));
    }, k = (l) => y.value.type === "local" ? Xn(l.value, { weekStartsOn: +a.weekStart }) : y.value.type === "iso" ? Jn(l.value) : typeof y.value.type == "function" ? y.value.type(l.value) : "", R = (l) => {
      const S = l[0];
      return y.value.hideOnOffsetDates ? l.some((x) => x.current) ? k(S) : "" : k(S);
    }, de = (l, S) => {
      T.value.enabled || (ft(l, o.value), n("select-date", S));
    }, d = (l) => {
      ft(l, o.value);
    }, le = (l) => {
      T.value.enabled && T.value.dragSelect ? (z.value = !0, n("select-date", l)) : T.value.enabled && n("select-date", l);
    };
    return t({ triggerTransition: ie }), (l, S) => {
      var x;
      return M(), j("div", {
        class: Me(H.value)
      }, [
        ce("div", {
          ref_key: "calendarWrapRef",
          ref: D,
          role: "grid",
          class: Me(oe.value),
          "aria-label": (x = i(O)) == null ? void 0 : x.calendarWrap
        }, [
          ce("div", Or, [
            l.weekNumbers ? (M(), j("div", Br, Le(l.weekNumName), 1)) : q("", !0),
            (M(!0), j(ke, null, Pe(Z.value, (J, ae) => {
              var g, $;
              return M(), j("div", {
                key: ae,
                class: "dp__calendar_header_item",
                role: "gridcell",
                "data-test": "calendar-header",
                "aria-label": ($ = (g = i(O)) == null ? void 0 : g.weekDay) == null ? void 0 : $.call(g, ae)
              }, [
                l.$slots["calendar-header"] ? se(l.$slots, "calendar-header", {
                  key: 0,
                  day: J,
                  index: ae
                }) : q("", !0),
                l.$slots["calendar-header"] ? q("", !0) : (M(), j(ke, { key: 1 }, [
                  it(Le(J), 1)
                ], 64))
              ], 8, Yr);
            }), 128))
          ]),
          Ir,
          Xe(_t, {
            name: C.value,
            css: !!l.transitions
          }, {
            default: ye(() => {
              var J;
              return [
                W.value ? (M(), j("div", {
                  key: 0,
                  class: "dp__calendar",
                  role: "rowgroup",
                  "aria-label": ((J = i(O)) == null ? void 0 : J.calendarDays) || void 0,
                  onMouseleave: S[1] || (S[1] = (ae) => z.value = !1)
                }, [
                  (M(!0), j(ke, null, Pe(F.value, (ae, g) => (M(), j("div", {
                    key: g,
                    class: "dp__calendar_row",
                    role: "row"
                  }, [
                    l.weekNumbers ? (M(), j("div", Er, [
                      ce("div", Fr, Le(R(ae.days)), 1)
                    ])) : q("", !0),
                    (M(!0), j(ke, null, Pe(ae.days, ($, ge) => {
                      var me, Ee, ue;
                      return M(), j("div", {
                        id: E($.value),
                        ref_for: !0,
                        ref: (Te) => ne(Te, g, ge),
                        key: ge + g,
                        role: "gridcell",
                        class: "dp__calendar_item",
                        "aria-selected": ($.classData.dp__active_date || $.classData.dp__range_start || $.classData.dp__range_start) ?? void 0,
                        "aria-disabled": $.classData.dp__cell_disabled || void 0,
                        "aria-label": (Ee = (me = i(O)) == null ? void 0 : me.day) == null ? void 0 : Ee.call(me, $),
                        tabindex: "0",
                        "data-test": $.value,
                        onClick: $e((Te) => de(Te, $), ["prevent"]),
                        onKeydown: [
                          fe((Te) => l.$emit("select-date", $), ["enter"]),
                          fe((Te) => l.$emit("handle-space", $), ["space"])
                        ],
                        onMouseenter: (Te) => A($, g, ge),
                        onMouseleave: (Te) => p($),
                        onMousedown: (Te) => le($),
                        onMouseup: S[0] || (S[0] = (Te) => z.value = !1)
                      }, [
                        ce("div", {
                          class: Me(["dp__cell_inner", $.classData])
                        }, [
                          l.$slots.day && te.value($) ? se(l.$slots, "day", {
                            key: 0,
                            day: +$.text,
                            date: $.value
                          }) : q("", !0),
                          l.$slots.day ? q("", !0) : (M(), j(ke, { key: 1 }, [
                            it(Le($.text), 1)
                          ], 64)),
                          $.marker && te.value($) ? (M(), j(ke, { key: 2 }, [
                            l.$slots.marker ? se(l.$slots, "marker", {
                              key: 0,
                              marker: $.marker,
                              day: +$.text,
                              date: $.value
                            }) : (M(), j("div", {
                              key: 1,
                              class: Me(re.value($.marker)),
                              style: qe($.marker.color ? { backgroundColor: $.marker.color } : {})
                            }, null, 6))
                          ], 64)) : q("", !0),
                          _.value($.value) ? (M(), j("div", {
                            key: 3,
                            ref_for: !0,
                            ref_key: "activeTooltip",
                            ref: N,
                            class: "dp__marker_tooltip",
                            style: qe(P.value)
                          }, [
                            (ue = $.marker) != null && ue.tooltip ? (M(), j("div", {
                              key: 0,
                              class: "dp__tooltip_content",
                              onClick: d
                            }, [
                              (M(!0), j(ke, null, Pe($.marker.tooltip, (Te, Ue) => (M(), j("div", {
                                key: Ue,
                                class: "dp__tooltip_text"
                              }, [
                                l.$slots["marker-tooltip"] ? se(l.$slots, "marker-tooltip", {
                                  key: 0,
                                  tooltip: Te,
                                  day: $.value
                                }) : q("", !0),
                                l.$slots["marker-tooltip"] ? q("", !0) : (M(), j(ke, { key: 1 }, [
                                  ce("div", {
                                    class: "dp__tooltip_mark",
                                    style: qe(Te.color ? { backgroundColor: Te.color } : {})
                                  }, null, 4),
                                  ce("div", null, Le(Te.text), 1)
                                ], 64))
                              ]))), 128)),
                              ce("div", {
                                class: "dp__arrow_bottom_tp",
                                style: qe(Y.value)
                              }, null, 4)
                            ])) : q("", !0)
                          ], 4)) : q("", !0)
                        ], 2)
                      ], 40, Lr);
                    }), 128))
                  ]))), 128))
                ], 40, Nr)) : q("", !0)
              ];
            }),
            _: 3
          }, 8, ["name", "css"])
        ], 10, _r)
      ], 2);
    };
  }
}), sn = (e) => Array.isArray(e), Wr = (e, t, r, n) => {
  const a = ee([]), f = ee(/* @__PURE__ */ new Date()), v = ee(), { modelValue: o, calendars: O, time: B, today: y } = Kt(e, t), {
    defaultedMultiCalendars: T,
    defaultedStartTime: b,
    defaultedRange: P,
    defaultedConfig: V,
    defaultedTz: D,
    propDates: W,
    defaultedMultiDates: C
  } = Re(e), { validateMonthYearInRange: L, isDisabled: N, isDateRangeAllowed: Y, checkMinMaxRange: z } = gt(e), { updateTimeValues: F, getSetDateTime: Z, setTime: h, assignStartTime: ie, validateTime: oe, disabledTimesConfig: re } = Nn(e, B, o, n), _ = Q(
    () => (s) => O.value[s] ? O.value[s].month : 0
  ), H = Q(
    () => (s) => O.value[s] ? O.value[s].year : 0
  ), te = (s) => !V.value.keepViewOnOffsetClick || s ? !0 : !v.value, E = (s, w, G, ve = !1) => {
    var De, je;
    te(ve) && (O.value[s] || (O.value[s] = { month: 0, year: 0 }), O.value[s].month = an(w) ? (De = O.value[s]) == null ? void 0 : De.month : w, O.value[s].year = an(G) ? (je = O.value[s]) == null ? void 0 : je.year : G);
  }, c = () => {
    e.autoApply && t("select-date");
  };
  mt(
    o,
    (s, w) => {
      JSON.stringify(s) !== JSON.stringify(w) && X();
    },
    { deep: !0 }
  ), ze(() => {
    e.shadow || (o.value || (l(), b.value && ie(b.value)), X(!0), e.focusStartDate && e.startDate && l());
  });
  const A = Q(() => {
    var s;
    return (s = e.flow) != null && s.length && !e.partialFlow ? e.flowStep === e.flow.length : !0;
  }), p = () => {
    e.autoApply && A.value && t("auto-apply");
  }, X = (s = !1) => {
    if (o.value)
      return Array.isArray(o.value) ? (a.value = o.value, R(s)) : U(o.value, s);
    if (T.value.count && s && !e.startDate)
      return m(K(), s);
  }, I = () => Array.isArray(o.value) && P.value.enabled ? he(o.value[0]) === he(o.value[1] ?? o.value[0]) : !1, m = (s, w = !1) => {
    if ((!T.value.count || !T.value.static || w) && E(0, he(s), pe(s)), T.value.count && (!T.value.solo || !o.value || I()))
      for (let G = 1; G < T.value.count; G++) {
        const ve = Ae(K(), { month: _.value(G - 1), year: H.value(G - 1) }), De = gn(ve, { months: 1 });
        O.value[G] = { month: he(De), year: pe(De) };
      }
  }, U = (s, w) => {
    m(s), h("hours", xe(s)), h("minutes", rt(s)), h("seconds", Pt(s)), T.value.count && w && le();
  }, ne = (s) => {
    if (T.value.count) {
      if (T.value.solo)
        return 0;
      const w = he(s[0]), G = he(s[1]);
      return Math.abs(G - w) < T.value.count ? 0 : 1;
    }
    return 1;
  }, u = (s, w) => {
    s[1] && P.value.showLastInRange ? m(s[ne(s)], w) : m(s[0], w);
    const G = (ve, De) => [
      ve(s[0]),
      s[1] ? ve(s[1]) : B[De][1]
    ];
    h("hours", G(xe, "hours")), h("minutes", G(rt, "minutes")), h("seconds", G(Pt, "seconds"));
  }, k = (s, w) => {
    if ((P.value.enabled || e.weekPicker) && !C.value.enabled)
      return u(s, w);
    if (C.value.enabled && w) {
      const G = s[s.length - 1];
      return U(G, w);
    }
  }, R = (s) => {
    const w = o.value;
    k(w, s), T.value.count && T.value.solo && le();
  }, de = (s, w) => {
    const G = Ae(K(), { month: _.value(w), year: H.value(w) }), ve = s < 0 ? kt(G, 1) : Vt(G, 1);
    L(he(ve), pe(ve), s < 0, e.preventMinMaxNavigation) && (E(w, he(ve), pe(ve)), t("update-month-year", { instance: w, month: he(ve), year: pe(ve) }), T.value.count && !T.value.solo && d(w), r());
  }, d = (s) => {
    for (let w = s - 1; w >= 0; w--) {
      const G = Vt(Ae(K(), { month: _.value(w + 1), year: H.value(w + 1) }), 1);
      E(w, he(G), pe(G));
    }
    for (let w = s + 1; w <= T.value.count - 1; w++) {
      const G = kt(Ae(K(), { month: _.value(w - 1), year: H.value(w - 1) }), 1);
      E(w, he(G), pe(G));
    }
  }, le = () => {
    if (Array.isArray(o.value) && o.value.length === 2) {
      const s = K(
        K(o.value[1] ? o.value[1] : kt(o.value[0], 1))
      ), [w, G] = [he(o.value[0]), pe(o.value[0])], [ve, De] = [he(o.value[1]), pe(o.value[1])];
      (w !== ve || w === ve && G !== De) && T.value.solo && E(1, he(s), pe(s));
    } else
      o.value && !Array.isArray(o.value) && (E(0, he(o.value), pe(o.value)), m(K()));
  }, l = () => {
    e.startDate && (E(0, he(K(e.startDate)), pe(K(e.startDate))), T.value.count && d(0));
  }, S = (s, w) => {
    if (e.monthChangeOnScroll) {
      const G = (/* @__PURE__ */ new Date()).getTime() - f.value.getTime(), ve = Math.abs(s.deltaY);
      let De = 500;
      ve > 1 && (De = 100), ve > 100 && (De = 0), G > De && (f.value = /* @__PURE__ */ new Date(), de(e.monthChangeOnScroll !== "inverse" ? -s.deltaY : s.deltaY, w));
    }
  }, x = (s, w, G = !1) => {
    e.monthChangeOnArrows && e.vertical === G && J(s, w);
  }, J = (s, w) => {
    de(s === "right" ? -1 : 1, w);
  }, ae = (s) => {
    if (W.value.markers)
      return aa(s.value, W.value.markers);
  }, g = (s, w) => {
    switch (e.sixWeeks === !0 ? "append" : e.sixWeeks) {
      case "prepend":
        return [!0, !1];
      case "center":
        return [s == 0, !0];
      case "fair":
        return [s == 0 || w > s, !0];
      case "append":
        return [!1, !1];
      default:
        return [!1, !1];
    }
  }, $ = (s, w, G, ve) => {
    if (e.sixWeeks && s.length < 6) {
      const De = 6 - s.length, je = (w.getDay() + 7 - ve) % 7, qt = 6 - (G.getDay() + 7 - ve) % 7, [Nt, ha] = g(je, qt);
      for (let yt = 1; yt <= De; yt++)
        if (ha ? !!(yt % 2) == Nt : Nt) {
          const Xt = s[0].days[0], ba = ge(bt(Xt.value, -7), he(w));
          s.unshift({ days: ba });
        } else {
          const Xt = s[s.length - 1], ba = Xt.days[Xt.days.length - 1], Fn = ge(bt(ba.value, 1), he(w));
          s.push({ days: Fn });
        }
    }
    return s;
  }, ge = (s, w) => {
    const G = K(s), ve = [];
    for (let De = 0; De < 7; De++) {
      const je = bt(G, De), It = he(je) !== w;
      ve.push({
        text: e.hideOffsetDates && It ? "" : je.getDate(),
        value: je,
        current: !It,
        classData: {}
      });
    }
    return ve;
  }, me = (s, w) => {
    const G = [], ve = new Date(w, s), De = new Date(w, s + 1, 0), je = e.weekStart, It = Na(ve, { weekStartsOn: je }), qt = (Nt) => {
      const ha = ge(Nt, s);
      if (G.push({ days: ha }), !G[G.length - 1].days.some(
        (yt) => be(Qe(yt.value), Qe(De))
      )) {
        const yt = bt(Nt, 7);
        qt(yt);
      }
    };
    return qt(It), $(G, ve, De, je);
  }, Ee = (s) => {
    const w = vt(K(s.value), B.hours, B.minutes, Ke());
    t("date-update", w), C.value.enabled ? ja(w, o, C.value.limit) : o.value = w, n(), et().then(() => {
      p();
    });
  }, ue = (s) => P.value.noDisabledRange ? An(a.value[0], s).some((G) => N(G)) : !1, Te = () => {
    a.value = o.value ? o.value.slice() : [], a.value.length === 2 && !(P.value.fixedStart || P.value.fixedEnd) && (a.value = []);
  }, Ue = (s, w) => {
    const G = [
      K(s.value),
      bt(K(s.value), +P.value.autoRange)
    ];
    Y(G) ? (w && Gt(s.value), a.value = G) : t("invalid-date", s.value);
  }, Gt = (s) => {
    const w = he(K(s)), G = pe(K(s));
    if (E(0, w, G), T.value.count > 0)
      for (let ve = 1; ve < T.value.count; ve++) {
        const De = pl(
          Ae(K(s), { year: _.value(ve - 1), month: H.value(ve - 1) })
        );
        E(ve, De.month, De.year);
      }
  }, da = (s) => {
    if (ue(s.value) || !z(s.value, o.value, P.value.fixedStart ? 0 : 1))
      return t("invalid-date", s.value);
    a.value = Bn(K(s.value), o, t, P);
  }, Bt = (s, w) => {
    if (Te(), P.value.autoRange)
      return Ue(s, w);
    if (P.value.fixedStart || P.value.fixedEnd)
      return da(s);
    a.value[0] ? z(K(s.value), o.value) && !ue(s.value) ? Ce(K(s.value), K(a.value[0])) ? (a.value.unshift(K(s.value)), t("range-end", a.value[0])) : (a.value[1] = K(s.value), t("range-end", a.value[1])) : (e.autoApply && t("auto-apply-invalid", s.value), t("invalid-date", s.value)) : (a.value[0] = K(s.value), t("range-start", a.value[0]));
  }, Ke = (s = !0) => e.enableSeconds ? Array.isArray(B.seconds) ? s ? B.seconds[0] : B.seconds[1] : B.seconds : 0, Yt = (s) => {
    a.value[s] = vt(
      a.value[s],
      B.hours[s],
      B.minutes[s],
      Ke(s !== 1)
    );
  }, ca = () => {
    var s, w;
    a.value[0] && a.value[1] && +((s = a.value) == null ? void 0 : s[0]) > +((w = a.value) == null ? void 0 : w[1]) && (a.value.reverse(), t("range-start", a.value[0]), t("range-end", a.value[1]));
  }, Qt = () => {
    a.value.length && (a.value[0] && !a.value[1] ? Yt(0) : (Yt(0), Yt(1), n()), ca(), o.value = a.value.slice(), ia(a.value, t, e.autoApply, e.modelAuto));
  }, fa = (s, w = !1) => {
    if (N(s.value) || !s.current && e.hideOffsetDates)
      return t("invalid-date", s.value);
    if (v.value = JSON.parse(JSON.stringify(s)), !P.value.enabled)
      return Ee(s);
    sn(B.hours) && sn(B.minutes) && !C.value.enabled && (Bt(s, w), Qt());
  }, va = (s, w) => {
    var ve;
    E(s, w.month, w.year, !0), T.value.count && !T.value.solo && d(s), t("update-month-year", { instance: s, month: w.month, year: w.year }), r(T.value.solo ? s : void 0);
    const G = (ve = e.flow) != null && ve.length ? e.flow[e.flowStep] : void 0;
    !w.fromNav && (G === at.month || G === at.year) && n();
  }, ma = (s, w) => {
    On({
      value: s,
      modelValue: o,
      range: P.value.enabled,
      timezone: w ? void 0 : D.value.timezone
    }), c(), e.multiCalendars && et().then(() => X(!0));
  }, pa = () => {
    P.value.enabled ? o.value && Array.isArray(o.value) && o.value[0] ? o.value = Ce(K(), o.value[0]) ? [K(), o.value[0]] : [o.value[0], K()] : o.value = [K()] : o.value = K(), c();
  }, ga = () => {
    if (Array.isArray(o.value))
      if (C.value.enabled) {
        const s = ya();
        o.value[o.value.length - 1] = Z(s);
      } else
        o.value = o.value.map((s, w) => s && Z(s, w));
    else
      o.value = Z(o.value);
    t("time-update");
  }, ya = () => Array.isArray(o.value) && o.value.length ? o.value[o.value.length - 1] : null;
  return {
    calendars: O,
    modelValue: o,
    month: _,
    year: H,
    time: B,
    disabledTimesConfig: re,
    today: y,
    validateTime: oe,
    getCalendarDays: me,
    getMarker: ae,
    handleScroll: S,
    handleSwipe: J,
    handleArrow: x,
    selectDate: fa,
    updateMonthYear: va,
    presetDate: ma,
    selectCurrentDate: pa,
    updateTime: (s, w = !0, G = !1) => {
      F(s, w, G, ga);
    }
  };
}, Hr = { key: 0 }, zr = /* @__PURE__ */ Ne({
  __name: "DatePicker",
  props: {
    ...tt
  },
  emits: [
    "tooltip-open",
    "tooltip-close",
    "mount",
    "update:internal-model-value",
    "update-flow-step",
    "reset-flow",
    "auto-apply",
    "focus-menu",
    "select-date",
    "range-start",
    "range-end",
    "invalid-fixed-range",
    "time-update",
    "am-pm-change",
    "time-picker-open",
    "time-picker-close",
    "recalculate-position",
    "update-month-year",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, {
      calendars: f,
      month: v,
      year: o,
      modelValue: O,
      time: B,
      disabledTimesConfig: y,
      today: T,
      validateTime: b,
      getCalendarDays: P,
      getMarker: V,
      handleArrow: D,
      handleScroll: W,
      handleSwipe: C,
      selectDate: L,
      updateMonthYear: N,
      presetDate: Y,
      selectCurrentDate: z,
      updateTime: F
    } = Wr(a, n, I, m), Z = Dt(), { setHoverDate: h, getDayClassData: ie, clearHoverDate: oe } = Hl(O, a), { defaultedMultiCalendars: re } = Re(a), _ = ee([]), H = ee([]), te = ee(null), E = Ge(Z, "calendar"), c = Ge(Z, "monthYear"), A = Ge(Z, "timePicker"), p = (l) => {
      a.shadow || n("mount", l);
    };
    mt(
      f,
      () => {
        a.shadow || setTimeout(() => {
          n("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const X = Q(() => (l) => P(v.value(l), o.value(l)).map((S) => ({
      ...S,
      days: S.days.map((x) => (x.marker = V(x), x.classData = ie(x), x))
    })));
    function I(l) {
      var S;
      l || l === 0 ? (S = H.value[l]) == null || S.triggerTransition(v.value(l), o.value(l)) : H.value.forEach((x, J) => x.triggerTransition(v.value(J), o.value(J)));
    }
    function m() {
      n("update-flow-step");
    }
    const U = (l, S = !1) => {
      L(l, S), a.spaceConfirm && n("select-date");
    };
    return t({
      clearHoverDate: oe,
      presetDate: Y,
      selectCurrentDate: z,
      toggleMonthPicker: (l, S, x = 0) => {
        var J;
        (J = _.value[x]) == null || J.toggleMonthPicker(l, S);
      },
      toggleYearPicker: (l, S, x = 0) => {
        var J;
        (J = _.value[x]) == null || J.toggleYearPicker(l, S);
      },
      toggleTimePicker: (l, S, x) => {
        var J;
        (J = te.value) == null || J.toggleTimePicker(l, S, x);
      },
      handleArrow: D,
      updateMonthYear: N,
      getSidebarProps: () => ({
        modelValue: O,
        month: v,
        year: o,
        time: B,
        updateTime: F,
        updateMonthYear: N,
        selectDate: L,
        presetDate: Y
      }),
      changeMonth: (l) => {
        var S;
        (S = _.value[0]) == null || S.handleMonthYearChange(l, !0);
      },
      changeYear: (l) => {
        N(0, { month: v.value(0), year: o.value(0) + (l ? 1 : -1), fromNav: !0 });
      },
      selectWeekDate: (l) => {
        if (!a.range) {
          const S = O.value ? O.value : T, x = l ? Na(S, { weekStartsOn: 1 }) : vn(S, { weekStartsOn: 1 });
          L({
            value: x,
            current: he(S) === v.value(0),
            text: "",
            classData: {}
          });
        }
      }
    }), (l, S) => (M(), j(ke, null, [
      Xe(ua, {
        "multi-calendars": i(re).count,
        collapse: l.collapse
      }, {
        default: ye(({ instance: x, index: J }) => [
          l.disableMonthYearSelect ? q("", !0) : (M(), we(Cr, Ve({
            key: 0,
            ref: (ae) => {
              ae && (_.value[J] = ae);
            },
            months: i(bn)(l.formatLocale, l.locale, l.monthNameFormat),
            years: i(Ha)(l.yearRange, l.locale, l.reverseYears),
            month: i(v)(x),
            year: i(o)(x),
            instance: x
          }, l.$props, {
            onMount: S[0] || (S[0] = (ae) => p(i(Mt).header)),
            onResetFlow: S[1] || (S[1] = (ae) => l.$emit("reset-flow")),
            onUpdateMonthYear: (ae) => i(N)(x, ae),
            onOverlayClosed: S[2] || (S[2] = (ae) => l.$emit("focus-menu"))
          }), He({ _: 2 }, [
            Pe(i(c), (ae, g) => ({
              name: ae,
              fn: ye(($) => [
                se(l.$slots, ae, Ye(We($)))
              ])
            }))
          ]), 1040, ["months", "years", "month", "year", "instance", "onUpdateMonthYear"])),
          Xe(Vr, Ve({
            ref: (ae) => {
              ae && (H.value[J] = ae);
            },
            "mapped-dates": X.value(x),
            month: i(v)(x),
            year: i(o)(x),
            instance: x
          }, l.$props, {
            onSelectDate: (ae) => i(L)(ae, x !== 1),
            onHandleSpace: (ae) => U(ae, x !== 1),
            onSetHoverDate: S[3] || (S[3] = (ae) => i(h)(ae)),
            onHandleScroll: (ae) => i(W)(ae, x),
            onHandleSwipe: (ae) => i(C)(ae, x),
            onMount: S[4] || (S[4] = (ae) => p(i(Mt).calendar)),
            onResetFlow: S[5] || (S[5] = (ae) => l.$emit("reset-flow")),
            onTooltipOpen: S[6] || (S[6] = (ae) => l.$emit("tooltip-open", ae)),
            onTooltipClose: S[7] || (S[7] = (ae) => l.$emit("tooltip-close", ae))
          }), He({ _: 2 }, [
            Pe(i(E), (ae, g) => ({
              name: ae,
              fn: ye(($) => [
                se(l.$slots, ae, Ye(We({ ...$ })))
              ])
            }))
          ]), 1040, ["mapped-dates", "month", "year", "instance", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
        ]),
        _: 3
      }, 8, ["multi-calendars", "collapse"]),
      l.enableTimePicker ? (M(), j("div", Hr, [
        l.$slots["time-picker"] ? se(l.$slots, "time-picker", Ye(Ve({ key: 0 }, { time: i(B), updateTime: i(F) }))) : (M(), we(In, Ve({
          key: 1,
          ref_key: "timePickerRef",
          ref: te
        }, l.$props, {
          hours: i(B).hours,
          minutes: i(B).minutes,
          seconds: i(B).seconds,
          "internal-model-value": l.internalModelValue,
          "disabled-times-config": i(y),
          "validate-time": i(b),
          onMount: S[8] || (S[8] = (x) => p(i(Mt).timePicker)),
          "onUpdate:hours": S[9] || (S[9] = (x) => i(F)(x)),
          "onUpdate:minutes": S[10] || (S[10] = (x) => i(F)(x, !1)),
          "onUpdate:seconds": S[11] || (S[11] = (x) => i(F)(x, !1, !0)),
          onResetFlow: S[12] || (S[12] = (x) => l.$emit("reset-flow")),
          onOverlayClosed: S[13] || (S[13] = (x) => l.$emit("time-picker-close")),
          onOverlayOpened: S[14] || (S[14] = (x) => l.$emit("time-picker-open", x)),
          onAmPmChange: S[15] || (S[15] = (x) => l.$emit("am-pm-change", x))
        }), He({ _: 2 }, [
          Pe(i(A), (x, J) => ({
            name: x,
            fn: ye((ae) => [
              se(l.$slots, x, Ye(We(ae)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"]))
      ])) : q("", !0)
    ], 64));
  }
}), Ur = (e, t) => {
  const r = ee(), {
    defaultedMultiCalendars: n,
    defaultedConfig: a,
    defaultedHighlight: f,
    defaultedRange: v,
    propDates: o,
    defaultedFilters: O,
    defaultedMultiDates: B
  } = Re(e), { modelValue: y, year: T, month: b, calendars: P } = Kt(e, t), { isDisabled: V } = gt(e), { selectYear: D, groupedYears: W, showYearPicker: C, isDisabled: L, toggleYearPicker: N, handleYearSelect: Y, handleYear: z } = Yn({
    modelValue: y,
    multiCalendars: n,
    highlight: f,
    calendars: P,
    propDates: o,
    month: b,
    year: T,
    filters: O,
    props: e,
    emit: t
  }), F = (A, p) => [A, p].map((X) => lt(X, "MMMM", { locale: e.formatLocale })).join("-"), Z = Q(() => (A) => y.value ? Array.isArray(y.value) ? y.value.some((p) => Ja(A, p)) : Ja(y.value, A) : !1), h = (A) => {
    if (v.value.enabled) {
      if (Array.isArray(y.value)) {
        const p = be(A, y.value[0]) || be(A, y.value[1]);
        return ra(y.value, r.value, A) && !p;
      }
      return !1;
    }
    return !1;
  }, ie = (A, p) => A.quarter === xa(p) && A.year === pe(p), oe = (A) => typeof f.value == "function" ? f.value({ quarter: xa(A), year: pe(A) }) : !!f.value.quarters.find((p) => ie(p, A)), re = Q(() => (A) => {
    const p = Ae(/* @__PURE__ */ new Date(), { year: T.value(A) });
    return Zn({
      start: xn(p),
      end: el(p)
    }).map((X) => {
      const I = tl(X), m = Za(X), U = V(X), ne = h(I), u = oe(I);
      return {
        text: F(I, m),
        value: I,
        active: Z.value(I),
        highlighted: u,
        disabled: U,
        isBetween: ne
      };
    });
  }), _ = (A) => {
    ja(A, y, B.value.limit), t("auto-apply", !0);
  }, H = (A) => {
    y.value = Ga(y, A, t), ia(y.value, t, e.autoApply, e.modelAuto);
  }, te = (A) => {
    y.value = A, t("auto-apply");
  };
  return {
    defaultedConfig: a,
    defaultedMultiCalendars: n,
    groupedYears: W,
    year: T,
    isDisabled: L,
    quarters: re,
    showYearPicker: C,
    modelValue: y,
    setHoverDate: (A) => {
      r.value = A;
    },
    selectYear: D,
    selectQuarter: (A, p, X) => {
      if (!X)
        return P.value[p].month = he(Za(A)), B.value.enabled ? _(A) : v.value.enabled ? H(A) : te(A);
    },
    toggleYearPicker: N,
    handleYearSelect: Y,
    handleYear: z
  };
}, Kr = { class: "dp--quarter-items" }, jr = ["data-test", "disabled", "onClick", "onMouseover"], Gr = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "QuarterPicker",
  props: {
    ...tt
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "overlay-closed",
    "auto-apply",
    "range-start",
    "range-end"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = Dt(), v = Ge(f, "yearMode"), {
      defaultedMultiCalendars: o,
      defaultedConfig: O,
      groupedYears: B,
      year: y,
      isDisabled: T,
      quarters: b,
      modelValue: P,
      showYearPicker: V,
      setHoverDate: D,
      selectQuarter: W,
      toggleYearPicker: C,
      handleYearSelect: L,
      handleYear: N
    } = Ur(a, n);
    return t({ getSidebarProps: () => ({
      modelValue: P,
      year: y,
      selectQuarter: W,
      handleYearSelect: L,
      handleYear: N
    }) }), (z, F) => (M(), we(ua, {
      "multi-calendars": i(o).count,
      collapse: z.collapse,
      stretch: ""
    }, {
      default: ye(({ instance: Z }) => [
        ce("div", {
          class: "dp-quarter-picker-wrap",
          style: qe({ minHeight: `${i(O).modeHeight}px` })
        }, [
          z.$slots["top-extra"] ? se(z.$slots, "top-extra", {
            key: 0,
            value: z.internalModelValue
          }) : q("", !0),
          ce("div", null, [
            Xe(_n, Ve(z.$props, {
              items: i(B)(Z),
              instance: Z,
              "show-year-picker": i(V)[Z],
              year: i(y)(Z),
              "is-disabled": (h) => i(T)(Z, h),
              onHandleYear: (h) => i(N)(Z, h),
              onYearSelect: (h) => i(L)(h, Z),
              onToggleYearPicker: (h) => i(C)(Z, h == null ? void 0 : h.flow, h == null ? void 0 : h.show)
            }), He({ _: 2 }, [
              Pe(i(v), (h, ie) => ({
                name: h,
                fn: ye((oe) => [
                  se(z.$slots, h, Ye(We(oe)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          ce("div", Kr, [
            (M(!0), j(ke, null, Pe(i(b)(Z), (h, ie) => (M(), j("div", { key: ie }, [
              ce("button", {
                type: "button",
                class: Me(["dp--qr-btn", {
                  "dp--qr-btn-active": h.active,
                  "dp--qr-btn-between": h.isBetween,
                  "dp--qr-btn-disabled": h.disabled,
                  "dp--highlighted": h.highlighted
                }]),
                "data-test": h.value,
                disabled: h.disabled,
                onClick: (oe) => i(W)(h.value, Z, h.disabled),
                onMouseover: (oe) => i(D)(h.value)
              }, [
                z.$slots.quarter ? se(z.$slots, "quarter", {
                  key: 0,
                  value: h.value,
                  text: h.text
                }) : (M(), j(ke, { key: 1 }, [
                  it(Le(h.text), 1)
                ], 64))
              ], 42, jr)
            ]))), 128))
          ])
        ], 4)
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), Qr = ["id", "aria-label"], qr = {
  key: 0,
  class: "dp--menu-load-container"
}, Xr = /* @__PURE__ */ ce("span", { class: "dp--menu-loader" }, null, -1), Jr = [
  Xr
], Zr = {
  key: 0,
  class: "dp__sidebar_left"
}, xr = ["data-test", "onClick", "onKeydown"], eo = {
  key: 2,
  class: "dp__sidebar_right"
}, to = {
  key: 3,
  class: "dp__action_extra"
}, un = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerMenu",
  props: {
    ...sa,
    shadow: { type: Boolean, default: !1 },
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    noOverlayFocus: { type: Boolean, default: !1 },
    collapse: { type: Boolean, default: !1 },
    getInputRect: { type: Function, default: () => ({}) }
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = ee(null), v = Q(() => {
      const { openOnTop: g, ...$ } = a;
      return {
        ...$,
        flowStep: h.value,
        collapse: a.collapse,
        noOverlayFocus: a.noOverlayFocus,
        menuWrapRef: f.value
      };
    }), { setMenuFocused: o, setShiftKey: O, control: B } = Cn(), y = Dt(), { defaultedTextInput: T, defaultedInline: b, defaultedConfig: P } = Re(a), V = ee(null), D = ee(0), W = ee(null), C = ee(!1), L = ee(null);
    ze(() => {
      if (!a.shadow) {
        C.value = !0, N(), window.addEventListener("resize", N);
        const g = Ie(f);
        if (g && !T.value.enabled && !b.value.enabled && (o(!0), te()), g) {
          const $ = (ge) => {
            P.value.allowPreventDefault && ge.preventDefault(), ft(ge, P.value, !0);
          };
          g.addEventListener("pointerdown", $), g.addEventListener("mousedown", $);
        }
      }
    }), na(() => {
      window.removeEventListener("resize", N);
    });
    const N = () => {
      const g = Ie(W);
      g && (D.value = g.getBoundingClientRect().width);
    }, { arrowRight: Y, arrowLeft: z, arrowDown: F, arrowUp: Z } = pt(), { flowStep: h, updateFlowStep: ie, childMount: oe, resetFlow: re } = zl(a, n, L), _ = Q(() => a.monthPicker ? rr : a.yearPicker ? sr : a.timePicker ? $r : a.quarterPicker ? Gr : zr), H = Q(() => {
      var ge;
      if (P.value.arrowLeft)
        return P.value.arrowLeft;
      const g = (ge = f.value) == null ? void 0 : ge.getBoundingClientRect(), $ = a.getInputRect();
      return $.width < D.value && $.left <= ((g == null ? void 0 : g.left) ?? 0) ? `${$.width / 2}px` : "50%";
    }), te = () => {
      const g = Ie(f);
      g && g.focus({ preventScroll: !0 });
    }, E = Q(() => {
      var g;
      return ((g = L.value) == null ? void 0 : g.getSidebarProps()) || {};
    }), c = () => {
      a.openOnTop && n("recalculate-position");
    }, A = Ge(y, "action"), p = Q(() => a.monthPicker || a.yearPicker ? Ge(y, "monthYear") : a.timePicker ? Ge(y, "timePicker") : Ge(y, "shared")), X = Q(() => a.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), I = Q(() => ({
      dp__menu_disabled: a.disabled,
      dp__menu_readonly: a.readonly,
      "dp-menu-loading": a.loading
    })), m = Q(
      () => ({
        dp__menu: !0,
        dp__menu_index: !b.value.enabled,
        dp__relative: b.value.enabled,
        [a.menuClassName]: !!a.menuClassName
      })
    ), U = (g) => {
      ft(g, P.value, !0);
    }, ne = () => {
      a.escClose && n("close-picker");
    }, u = (g) => {
      if (a.arrowNavigation) {
        if (g === "up")
          return Z();
        if (g === "down")
          return F();
        if (g === "left")
          return z();
        if (g === "right")
          return Y();
      } else
        g === "left" || g === "up" ? le("handleArrow", "left", 0, g === "up") : le("handleArrow", "right", 0, g === "down");
    }, k = (g) => {
      O(g.shiftKey), !a.disableMonthYearSelect && g.code === "Tab" && g.target.classList.contains("dp__menu") && B.value.shiftKeyInMenu && (g.preventDefault(), ft(g, P.value, !0), n("close-picker"));
    }, R = () => {
      te(), n("time-picker-close");
    }, de = (g) => {
      var $, ge, me;
      ($ = L.value) == null || $.toggleTimePicker(!1, !1), (ge = L.value) == null || ge.toggleMonthPicker(!1, !1, g), (me = L.value) == null || me.toggleYearPicker(!1, !1, g);
    }, d = (g, $ = 0) => {
      var ge, me, Ee;
      return g === "month" ? (ge = L.value) == null ? void 0 : ge.toggleMonthPicker(!1, !0, $) : g === "year" ? (me = L.value) == null ? void 0 : me.toggleYearPicker(!1, !0, $) : g === "time" ? (Ee = L.value) == null ? void 0 : Ee.toggleTimePicker(!0, !1) : de($);
    }, le = (g, ...$) => {
      var ge, me;
      (ge = L.value) != null && ge[g] && ((me = L.value) == null || me[g](...$));
    }, l = () => {
      le("selectCurrentDate");
    }, S = (g, $) => {
      le("presetDate", g, $);
    }, x = () => {
      le("clearHoverDate");
    }, J = (g, $) => {
      le("updateMonthYear", g, $);
    }, ae = (g) => {
      if (k(g), g.key === "Home" || g.key === "End")
        return le("selectWeekDate", g.key === "Home");
      if (g.key === "PageUp" || g.key === "PageDown")
        return g.shiftKey ? le("changeYear", g.key === "PageUp") : le("changeMonth", g.key === "PageUp");
    };
    return t({
      updateMonthYear: J,
      switchView: d
    }), (g, $) => {
      var ge, me, Ee;
      return M(), j("div", {
        id: g.uid ? `dp-menu-${g.uid}` : void 0,
        ref_key: "dpMenuRef",
        ref: f,
        tabindex: "0",
        role: "dialog",
        "aria-label": (ge = g.ariaLabels) == null ? void 0 : ge.menu,
        class: Me(m.value),
        style: qe({ "--dp-arrow-left": H.value }),
        onMouseleave: x,
        onClick: U,
        onKeydown: [
          fe(ne, ["esc"]),
          $[18] || ($[18] = fe($e((ue) => u("left"), ["prevent"]), ["left"])),
          $[19] || ($[19] = fe($e((ue) => u("up"), ["prevent"]), ["up"])),
          $[20] || ($[20] = fe($e((ue) => u("down"), ["prevent"]), ["down"])),
          $[21] || ($[21] = fe($e((ue) => u("right"), ["prevent"]), ["right"])),
          ae
        ]
      }, [
        (g.disabled || g.readonly) && i(b).enabled || g.loading ? (M(), j("div", {
          key: 0,
          class: Me(I.value)
        }, [
          g.loading ? (M(), j("div", qr, Jr)) : q("", !0)
        ], 2)) : q("", !0),
        !i(b).enabled && !g.teleportCenter ? (M(), j("div", {
          key: 1,
          class: Me(X.value)
        }, null, 2)) : q("", !0),
        ce("div", {
          ref_key: "innerMenuRef",
          ref: W,
          class: Me({
            dp__menu_content_wrapper: ((me = g.presetDates) == null ? void 0 : me.length) || !!g.$slots["left-sidebar"] || !!g.$slots["right-sidebar"],
            "dp--menu-content-wrapper-collapsed": e.collapse && (((Ee = g.presetDates) == null ? void 0 : Ee.length) || !!g.$slots["left-sidebar"] || !!g.$slots["right-sidebar"])
          }),
          style: qe({ "--dp-menu-width": `${D.value}px` })
        }, [
          g.$slots["left-sidebar"] ? (M(), j("div", Zr, [
            se(g.$slots, "left-sidebar", Ye(We(E.value)))
          ])) : q("", !0),
          g.presetDates.length ? (M(), j("div", {
            key: 1,
            class: Me({ "dp--preset-dates-collapsed": e.collapse, "dp--preset-dates": !0 })
          }, [
            (M(!0), j(ke, null, Pe(g.presetDates, (ue, Te) => (M(), j(ke, { key: Te }, [
              ue.slot ? se(g.$slots, ue.slot, {
                key: 0,
                presetDate: S,
                label: ue.label,
                value: ue.value
              }) : (M(), j("button", {
                key: 1,
                type: "button",
                style: qe(ue.style || {}),
                class: Me(["dp__btn dp--preset-range", { "dp--preset-range-collapsed": e.collapse }]),
                "data-test": ue.testId ?? void 0,
                onClick: $e((Ue) => S(ue.value, ue.noTz), ["prevent"]),
                onKeydown: [
                  fe($e((Ue) => S(ue.value, ue.noTz), ["prevent"]), ["enter"]),
                  fe($e((Ue) => S(ue.value, ue.noTz), ["prevent"]), ["space"])
                ]
              }, Le(ue.label), 47, xr))
            ], 64))), 128))
          ], 2)) : q("", !0),
          ce("div", {
            ref_key: "calendarWrapperRef",
            ref: V,
            class: "dp__instance_calendar",
            role: "document"
          }, [
            (M(), we(la(_.value), Ve({
              ref_key: "dynCmpRef",
              ref: L
            }, v.value, {
              "flow-step": i(h),
              onMount: i(oe),
              onUpdateFlowStep: i(ie),
              onResetFlow: i(re),
              onFocusMenu: te,
              onSelectDate: $[0] || ($[0] = (ue) => g.$emit("select-date")),
              onDateUpdate: $[1] || ($[1] = (ue) => g.$emit("date-update", ue)),
              onTooltipOpen: $[2] || ($[2] = (ue) => g.$emit("tooltip-open", ue)),
              onTooltipClose: $[3] || ($[3] = (ue) => g.$emit("tooltip-close", ue)),
              onAutoApply: $[4] || ($[4] = (ue) => g.$emit("auto-apply", ue)),
              onRangeStart: $[5] || ($[5] = (ue) => g.$emit("range-start", ue)),
              onRangeEnd: $[6] || ($[6] = (ue) => g.$emit("range-end", ue)),
              onInvalidFixedRange: $[7] || ($[7] = (ue) => g.$emit("invalid-fixed-range", ue)),
              onTimeUpdate: $[8] || ($[8] = (ue) => g.$emit("time-update")),
              onAmPmChange: $[9] || ($[9] = (ue) => g.$emit("am-pm-change", ue)),
              onTimePickerOpen: $[10] || ($[10] = (ue) => g.$emit("time-picker-open", ue)),
              onTimePickerClose: R,
              onRecalculatePosition: c,
              onUpdateMonthYear: $[11] || ($[11] = (ue) => g.$emit("update-month-year", ue)),
              onAutoApplyInvalid: $[12] || ($[12] = (ue) => g.$emit("auto-apply-invalid", ue)),
              onInvalidDate: $[13] || ($[13] = (ue) => g.$emit("invalid-date", ue)),
              "onUpdate:internalModelValue": $[14] || ($[14] = (ue) => g.$emit("update:internal-model-value", ue))
            }), He({ _: 2 }, [
              Pe(p.value, (ue, Te) => ({
                name: ue,
                fn: ye((Ue) => [
                  se(g.$slots, ue, Ye(We({ ...Ue })))
                ])
              }))
            ]), 1040, ["flow-step", "onMount", "onUpdateFlowStep", "onResetFlow"]))
          ], 512),
          g.$slots["right-sidebar"] ? (M(), j("div", eo, [
            se(g.$slots, "right-sidebar", Ye(We(E.value)))
          ])) : q("", !0),
          g.$slots["action-extra"] ? (M(), j("div", to, [
            g.$slots["action-extra"] ? se(g.$slots, "action-extra", {
              key: 0,
              selectCurrentDate: l
            }) : q("", !0)
          ])) : q("", !0)
        ], 6),
        !g.autoApply || i(P).keepActionRow ? (M(), we(Xl, Ve({
          key: 2,
          "menu-mount": C.value
        }, v.value, {
          "calendar-width": D.value,
          onClosePicker: $[15] || ($[15] = (ue) => g.$emit("close-picker")),
          onSelectDate: $[16] || ($[16] = (ue) => g.$emit("select-date")),
          onInvalidSelect: $[17] || ($[17] = (ue) => g.$emit("invalid-select")),
          onSelectNow: l
        }), He({ _: 2 }, [
          Pe(i(A), (ue, Te) => ({
            name: ue,
            fn: ye((Ue) => [
              se(g.$slots, ue, Ye(We({ ...Ue })))
            ])
          }))
        ]), 1040, ["menu-mount", "calendar-width"])) : q("", !0)
      ], 46, Qr);
    };
  }
}), ao = typeof window < "u" ? window : void 0, Ca = () => {
}, no = (e) => Wn() ? (Hn(e), !0) : !1, lo = (e, t, r, n) => {
  if (!e)
    return Ca;
  let a = Ca;
  const f = mt(
    () => i(e),
    (o) => {
      a(), o && (o.addEventListener(t, r, n), a = () => {
        o.removeEventListener(t, r, n), a = Ca;
      });
    },
    { immediate: !0, flush: "post" }
  ), v = () => {
    f(), a();
  };
  return no(v), v;
}, ro = (e, t, r, n = {}) => {
  const { window: a = ao, event: f = "pointerdown" } = n;
  return a ? lo(a, f, (o) => {
    const O = Ie(e), B = Ie(t);
    !O || !B || O === o.target || o.composedPath().includes(O) || o.composedPath().includes(B) || r(o);
  }, { passive: !0 }) : void 0;
}, oo = /* @__PURE__ */ Ne({
  compatConfig: {
    MODE: 3
  },
  __name: "VueDatePicker",
  props: {
    ...sa
  },
  emits: [
    "update:model-value",
    "update:model-timezone-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const n = r, a = e, f = Dt(), v = ee(!1), o = Lt(a, "modelValue"), O = Lt(a, "timezone"), B = ee(null), y = ee(null), T = ee(null), b = ee(!1), P = ee(null), V = ee(!1), D = ee(!1), W = ee(!1), { setMenuFocused: C, setShiftKey: L } = Cn(), { clearArrowNav: N } = pt(), { validateDate: Y, isValidTime: z } = gt(a), {
      defaultedTransitions: F,
      defaultedTextInput: Z,
      defaultedInline: h,
      defaultedConfig: ie,
      defaultedRange: oe,
      defaultedMultiDates: re
    } = Re(a), { menuTransition: _, showTransition: H } = Ut(F);
    ze(() => {
      u(a.modelValue), et().then(() => {
        if (!h.value.enabled) {
          const s = I(P.value);
          s == null || s.addEventListener("scroll", ae), window == null || window.addEventListener("resize", g);
        }
      }), h.value.enabled && (v.value = !0), window == null || window.addEventListener("keyup", $), window == null || window.addEventListener("keydown", ge);
    }), na(() => {
      if (!h.value.enabled) {
        const s = I(P.value);
        s == null || s.removeEventListener("scroll", ae), window == null || window.removeEventListener("resize", g);
      }
      window == null || window.removeEventListener("keyup", $), window == null || window.removeEventListener("keydown", ge);
    });
    const te = Ge(f, "all", a.presetDates), E = Ge(f, "input");
    mt(
      [o, O],
      () => {
        u(o.value);
      },
      { deep: !0 }
    );
    const { openOnTop: c, menuStyle: A, xCorrect: p, setMenuPosition: X, getScrollableParent: I, shadowRender: m } = Ll({
      menuRef: B,
      menuRefInner: y,
      inputRef: T,
      pickerWrapperRef: P,
      inline: h,
      emit: n,
      props: a,
      slots: f
    }), {
      inputValue: U,
      internalModelValue: ne,
      parseExternalModelValue: u,
      emitModelValue: k,
      formatInputValue: R,
      checkBeforeEmit: de
    } = El(n, a, b), d = Q(
      () => ({
        dp__main: !0,
        dp__theme_dark: a.dark,
        dp__theme_light: !a.dark,
        dp__flex_display: h.value.enabled,
        "dp--flex-display-collapsed": W.value,
        dp__flex_display_with_input: h.value.input
      })
    ), le = Q(() => a.dark ? "dp__theme_dark" : "dp__theme_light"), l = Q(() => a.teleport ? {
      to: typeof a.teleport == "boolean" ? "body" : a.teleport,
      disabled: !a.teleport || h.value.enabled
    } : {}), S = Q(() => ({ class: "dp__outer_menu_wrap" })), x = Q(() => h.value.enabled && (a.timePicker || a.monthPicker || a.yearPicker || a.quarterPicker)), J = () => {
      var s, w;
      return (w = (s = T.value) == null ? void 0 : s.$el) == null ? void 0 : w.getBoundingClientRect();
    }, ae = () => {
      v.value && (ie.value.closeOnScroll ? Ke() : X());
    }, g = () => {
      var w;
      v.value && X();
      const s = (w = y.value) == null ? void 0 : w.$el.getBoundingClientRect().width;
      W.value = document.body.offsetWidth <= s;
    }, $ = (s) => {
      s.key === "Tab" && !h.value.enabled && !a.teleport && ie.value.tabOutClosesMenu && (P.value.contains(document.activeElement) || Ke()), D.value = s.shiftKey;
    }, ge = (s) => {
      D.value = s.shiftKey;
    }, me = () => {
      !a.disabled && !a.readonly && (m(un, a), X(!1), v.value = !0, v.value && n("open"), v.value || Bt(), u(a.modelValue));
    }, Ee = () => {
      var s;
      U.value = "", Bt(), (s = T.value) == null || s.setParsedDate(null), n("update:model-value", null), n("update:model-timezone-value", null), n("cleared"), ie.value.closeOnClearValue && Ke();
    }, ue = () => {
      const s = ne.value;
      return !s || !Array.isArray(s) && Y(s) ? !0 : Array.isArray(s) ? re.value.enabled || s.length === 2 && Y(s[0]) && Y(s[1]) ? !0 : oe.value.partialRange && !a.timePicker ? Y(s[0]) : !1 : !1;
    }, Te = () => {
      de() && ue() ? (k(), Ke()) : n("invalid-select", ne.value);
    }, Ue = (s) => {
      Gt(), k(), ie.value.closeOnAutoApply && !s && Ke();
    }, Gt = () => {
      T.value && Z.value.enabled && T.value.setParsedDate(ne.value);
    }, da = (s = !1) => {
      a.autoApply && z(ne.value) && ue() && (oe.value.enabled && Array.isArray(ne.value) ? (oe.value.partialRange || ne.value.length === 2) && Ue(s) : Ue(s));
    }, Bt = () => {
      Z.value.enabled || (ne.value = null);
    }, Ke = () => {
      h.value.enabled || (v.value && (v.value = !1, p.value = !1, C(!1), L(!1), N(), n("closed"), U.value && u(o.value)), Bt(), n("blur"));
    }, Yt = (s, w, G = !1) => {
      if (!s) {
        ne.value = null;
        return;
      }
      const ve = Array.isArray(s) ? !s.some((je) => !Y(je)) : Y(s), De = z(s);
      ve && De && (ne.value = s, w && (V.value = G, Te(), n("text-submit")));
    }, ca = () => {
      a.autoApply && z(ne.value) && k(), Gt();
    }, Qt = () => v.value ? Ke() : me(), fa = (s) => {
      ne.value = s;
    }, va = () => {
      Z.value.enabled && (b.value = !0, R()), n("focus");
    }, ma = () => {
      if (Z.value.enabled && (b.value = !1, u(a.modelValue), V.value)) {
        const s = dl(P.value, D.value);
        s == null || s.focus();
      }
      n("blur");
    }, pa = (s) => {
      y.value && y.value.updateMonthYear(0, {
        month: tn(s.month),
        year: tn(s.year)
      });
    }, ga = (s) => {
      u(s ?? a.modelValue);
    }, ya = (s, w) => {
      var G;
      (G = y.value) == null || G.switchView(s, w);
    }, Qa = (s) => ie.value.onClickOutside ? ie.value.onClickOutside(s) : Ke();
    return ro(B, T, () => Qa(ue)), t({
      closeMenu: Ke,
      selectDate: Te,
      clearValue: Ee,
      openMenu: me,
      onScroll: ae,
      formatInputValue: R,
      // exposed for testing purposes
      updateInternalModelValue: fa,
      // modify internal modelValue
      setMonthYear: pa,
      parseModel: ga,
      switchView: ya,
      toggleMenu: Qt
    }), (s, w) => (M(), j("div", {
      ref_key: "pickerWrapperRef",
      ref: P,
      class: Me(d.value),
      "data-datepicker-instance": ""
    }, [
      Xe(Gl, Ve({
        ref_key: "inputRef",
        ref: T,
        "input-value": i(U),
        "onUpdate:inputValue": w[0] || (w[0] = (G) => Xa(U) ? U.value = G : null),
        "is-menu-open": v.value
      }, s.$props, {
        onClear: Ee,
        onOpen: me,
        onSetInputDate: Yt,
        onSetEmptyDate: i(k),
        onSelectDate: Te,
        onToggle: Qt,
        onClose: Ke,
        onFocus: va,
        onBlur: ma,
        onRealBlur: w[1] || (w[1] = (G) => b.value = !1)
      }), He({ _: 2 }, [
        Pe(i(E), (G, ve) => ({
          name: G,
          fn: ye((De) => [
            se(s.$slots, G, Ye(We(De)))
          ])
        }))
      ]), 1040, ["input-value", "is-menu-open", "onSetEmptyDate"]),
      (M(), we(la(s.teleport ? zn : "div"), Ye(We(l.value)), {
        default: ye(() => [
          Xe(_t, {
            name: i(_)(i(c)),
            css: i(H) && !i(h).enabled
          }, {
            default: ye(() => [
              v.value ? (M(), j("div", Ve({
                key: 0,
                ref_key: "dpWrapMenuRef",
                ref: B
              }, S.value, {
                class: { "dp--menu-wrapper": !i(h).enabled },
                style: i(h).enabled ? void 0 : i(A)
              }), [
                Xe(un, Ve({
                  ref_key: "dpMenuRef",
                  ref: y
                }, s.$props, {
                  "internal-model-value": i(ne),
                  "onUpdate:internalModelValue": w[2] || (w[2] = (G) => Xa(ne) ? ne.value = G : null),
                  class: { [le.value]: !0, "dp--menu-wrapper": s.teleport },
                  "open-on-top": i(c),
                  "no-overlay-focus": x.value,
                  collapse: W.value,
                  "get-input-rect": J,
                  onClosePicker: Ke,
                  onSelectDate: Te,
                  onAutoApply: da,
                  onTimeUpdate: ca,
                  onFlowStep: w[3] || (w[3] = (G) => s.$emit("flow-step", G)),
                  onUpdateMonthYear: w[4] || (w[4] = (G) => s.$emit("update-month-year", G)),
                  onInvalidSelect: w[5] || (w[5] = (G) => s.$emit("invalid-select", i(ne))),
                  onAutoApplyInvalid: w[6] || (w[6] = (G) => s.$emit("invalid-select", G)),
                  onInvalidFixedRange: w[7] || (w[7] = (G) => s.$emit("invalid-fixed-range", G)),
                  onRecalculatePosition: i(X),
                  onTooltipOpen: w[8] || (w[8] = (G) => s.$emit("tooltip-open", G)),
                  onTooltipClose: w[9] || (w[9] = (G) => s.$emit("tooltip-close", G)),
                  onTimePickerOpen: w[10] || (w[10] = (G) => s.$emit("time-picker-open", G)),
                  onTimePickerClose: w[11] || (w[11] = (G) => s.$emit("time-picker-close", G)),
                  onAmPmChange: w[12] || (w[12] = (G) => s.$emit("am-pm-change", G)),
                  onRangeStart: w[13] || (w[13] = (G) => s.$emit("range-start", G)),
                  onRangeEnd: w[14] || (w[14] = (G) => s.$emit("range-end", G)),
                  onDateUpdate: w[15] || (w[15] = (G) => s.$emit("date-update", G)),
                  onInvalidDate: w[16] || (w[16] = (G) => s.$emit("invalid-date", G))
                }), He({ _: 2 }, [
                  Pe(i(te), (G, ve) => ({
                    name: G,
                    fn: ye((De) => [
                      se(s.$slots, G, Ye(We({ ...De })))
                    ])
                  }))
                ]), 1040, ["internal-model-value", "class", "open-on-top", "no-overlay-focus", "collapse", "onRecalculatePosition"])
              ], 16)) : q("", !0)
            ]),
            _: 3
          }, 8, ["name", "css"])
        ]),
        _: 3
      }, 16))
    ], 2));
  }
}), En = /* @__PURE__ */ (() => {
  const e = oo;
  return e.install = (t) => {
    t.component("Vue3DatePicker", e);
  }, e;
})(), so = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: En
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(so).forEach(([e, t]) => {
  e !== "default" && (En[e] = t);
});
export {
  En as default
};
